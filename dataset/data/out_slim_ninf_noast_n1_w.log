(-165, -194, 'CDG', 1)
(-202, -147, 'DDGread_ret', -1)
(-59, -259, 'DDGh', -1)
(-165, -195, 'DDGread_ret', 1)
(-8, -253, 'DDGs', -1)
(-59, -150, 'DDGread_ret', 1)
(-8, -155, 'DDGs', 1)
(-77, -252, 'CDG', -1)
(-50, -150, 'CDG', 1)
(-77, -250, 'DDGread_ret', -1)
(-59, -202, 'DDGread_ret', -1)
(-50, -202, 'CDG', -1)
(-201, -195, 'DDGh', 1)
(-202, -147, 'CDG', -1)
(-77, -147, 'CDG', 1)
(-59, -195, 'DDGh', 1)
(-59, -201, 'DDGsize', 1)
(-197, -199, 'CDG', 1)
(-196, -197, 'DDGerr', 1)
(-77, -147, 'DDGread_ret', 1)
(-194, -196, 'CDG', 1)
(-194, -195, 'DDGreconnect_delay', 1)
(-254, -255, 'DDGerr', -1)
(-202, -77, 'CDG', -1)
(-150, -147, 'DDGread_ret', 1)
(-165, -147, 'DDGread_ret', 1)
(-155, -165, 'CDG', 1)
(-59, -201, 'DDGbuf', 1)
(-253, -257, 'DDGh', -1)
(-256, -252, 'DDGreconnect_delay', -1)
(-77, -165, 'DDGread_ret', 1)
(-202, -77, 'DDGread_ret', -1)
(-201, -155, 'DDGh', 1)
(-8, -202, 'DDGs', -1)
(-252, -253, 'CDG', -1)
(-199, -200, 'DDGseek_ret', 1)
(-258, -259, 'CDG', -1)
(-150, -77, 'DDGread_ret', 1)
(-59, -155, 'DDGh', 1)
(-195, -199, 'DDGh', 1)
(-150, -147, 'CDG', 1)
(-165, -147, 'CDG', 1)
(-253, -254, 'DDGreconnect_delay', -1)
(-257, -258, 'DDGseek_ret', -1)
(-259, -202, 'DDGread_ret', -1)
(-77, -155, 'CDG', 1)
(-202, -67, 'CDG', -1)
(-77, -250, 'CDG', -1)
(-259, -202, 'DDGh', -1)
(-200, -150, 'CDG', 1)
(-59, -259, 'DDGsize', -1)
(-258, -202, 'CDG', -1)
(-259, -253, 'DDGh', -1)
(-150, -67, 'CDG', 1)
(-150, -77, 'CDG', 1)
(-252, -254, 'CDG', -1)
(-255, -256, 'CDG', -1)
(-59, -259, 'DDGbuf', -1)
(-197, -198, 'CDG', 1)
(-59, -201, 'DDGh', 1)
(-8, -165, 'DDGs', 1)
(-194, -195, 'CDG', 1)
(-201, -150, 'DDGread_ret', 1)
(-155, -147, 'CDG', 1)
(-59, -253, 'DDGh', -1)
(-252, -253, 'DDGreconnect_delay', -1)
(-253, -254, 'DDGh', -1)
(-202, -67, 'DDGs->off', -1)
(-198, -194, 'DDGreconnect_delay', 1)
(-8, -195, 'DDGs', 1)
(-195, -196, 'DDGh', 1)
(-195, -196, 'DDGreconnect_delay', 1)
(-255, -257, 'CDG', -1)
(-200, -201, 'CDG', 1)
(-59, -202, 'DDGh', -1)
(-253, -67, 'DDGs->off', -1)
(-195, -67, 'DDGs->off', 1)
===========================
(-8, 0, 'D', 19, '1433', '*s = h->priv_data')
(-165, 1, '-', 0, '+1462', 'if (!(s->reconnect && s->filesize > 0 && s->off < s->filesize) &&\\n            !(s->reconnect_at_eof && read_ret == AVERROR_EOF))')
(-147, 0, 'D', 21, '1483', 'return read_ret;')
(-155, 1, '-', 0, '+1459', 'if (h->is_streamed && !s->reconnect_streamed)')
(-259, -1, '-', 0, '-1480', 'read_ret = http_buf_read(h, buf, size)')
(-164, 1, '-', 0, '+1460', 'break;')
(-196, 1, '-', 0, '+1470', 'err = ff_network_sleep_interruptible(1000U*1000*reconnect_delay, &h->interrupt_callback)')
(-77, 0, 'C', 1, '1456', 'if (read_ret == AVERROR_EXIT)')
(-50, 0, 'C', 4, '1448', 'if (s->compressed)')
(-253, -1, '-', 0, '-1469', 'av_log(h, AV_LOG_WARNING, "Will reconnect at %"PRIu64" in %d second(s), error=%s.\\n", s->off, reconnect_delay, av_err2str(read_ret))')
(-67, 0, 'C', 2, '1454', 'target = h->is_streamed ? 0 : s->off')
(-257, -1, '-', 0, '-1474', 'seek_ret = http_seek_internal(h, target, SEEK_SET, 1)')
(-59, 0, 'D', 1, '1451', 'read_ret = http_buf_read(h, buf, size)')
(-154, 1, '-', 0, '+1457', 'break;')
(-150, 1, '-', 0, '+1452', 'while (read_ret < 0)')
(-199, 1, '-', 0, '+1474', 'seek_ret = http_seek_internal(h, target, SEEK_SET, 1)')
(-254, -1, '-', 0, '-1470', 'err = ff_network_sleep_interruptible(1000U*1000*reconnect_delay, &h->interrupt_callback)')
(-202, -1, '-', 0, '-1452', 'while ((read_ret  < 0           && s->reconnect        && (!h->is_streamed || s->reconnect_streamed) && s->filesize > 0 && s->off < s->filesize)\\n        || (read_ret == AVERROR_EOF && s->reconnect_at_eof && (!h->is_streamed || s->reconnect_streamed)))')
(-256, -1, '-', 0, '-1473', 'reconnect_delay = 1 + 2*reconnect_delay')
(-197, 1, '-', 0, '+1471', 'if (err != AVERROR(ETIMEDOUT))')
(-258, -1, '-', 0, '-1475', 'if (seek_ret >= 0 && seek_ret != target)')
(-250, -1, '-', 0, '-1457', 'return read_ret;')
(-194, 1, '-', 0, '+1466', 'if (reconnect_delay > s->reconnect_delay_max)')
(-252, -1, '-', 0, '-1466', 'if (reconnect_delay > s->reconnect_delay_max)')
(-255, -1, '-', 0, '-1471', 'if (err != AVERROR(ETIMEDOUT))')
(-200, 1, '-', 0, '+1475', 'if (seek_ret >= 0 && seek_ret != target)')
(-195, 1, '-', 0, '+1469', 'av_log(h, AV_LOG_WARNING, "Will reconnect at %"PRIu64" in %d second(s), error=%s.\\n", s->off, reconnect_delay, av_err2str(read_ret))')
(-193, 1, '-', 0, '+1464', 'break;')
(-201, 1, '-', 0, '+1480', 'read_ret = http_buf_read(h, buf, size)')
(-198, 1, '-', 0, '+1473', 'reconnect_delay = 1 + 2*reconnect_delay')
---------------------------
(-202, -147, 'DDGread_ret', -1)
(-59, -259, 'DDGh', -1)
(-8, -253, 'DDGs', -1)
(-77, -252, 'CDG', -1)
(-77, -250, 'DDGread_ret', -1)
(-59, -202, 'DDGread_ret', -1)
(-50, -202, 'CDG', -1)
(-202, -147, 'CDG', -1)
(-254, -255, 'DDGerr', -1)
(-202, -77, 'CDG', -1)
(-253, -257, 'DDGh', -1)
(-256, -252, 'DDGreconnect_delay', -1)
(-202, -77, 'DDGread_ret', -1)
(-8, -202, 'DDGs', -1)
(-252, -253, 'CDG', -1)
(-258, -259, 'CDG', -1)
(-253, -254, 'DDGreconnect_delay', -1)
(-257, -258, 'DDGseek_ret', -1)
(-259, -202, 'DDGread_ret', -1)
(-202, -67, 'CDG', -1)
(-77, -250, 'CDG', -1)
(-259, -202, 'DDGh', -1)
(-59, -259, 'DDGsize', -1)
(-258, -202, 'CDG', -1)
(-259, -253, 'DDGh', -1)
(-252, -254, 'CDG', -1)
(-255, -256, 'CDG', -1)
(-59, -259, 'DDGbuf', -1)
(-59, -253, 'DDGh', -1)
(-252, -253, 'DDGreconnect_delay', -1)
(-253, -254, 'DDGh', -1)
(-202, -67, 'DDGs->off', -1)
(-255, -257, 'CDG', -1)
(-59, -202, 'DDGh', -1)
(-253, -67, 'DDGs->off', -1)
===========================
(-8, 0, 'D', 19, '1433', '*s = h->priv_data')
(-147, 0, 'D', 21, '1483', 'return read_ret;')
(-259, -1, '-', 0, '-1480', 'read_ret = http_buf_read(h, buf, size)')
(-77, 0, 'C', 1, '1456', 'if (read_ret == AVERROR_EXIT)')
(-50, 0, 'C', 4, '1448', 'if (s->compressed)')
(-253, -1, '-', 0, '-1469', 'av_log(h, AV_LOG_WARNING, "Will reconnect at %"PRIu64" in %d second(s), error=%s.\\n", s->off, reconnect_delay, av_err2str(read_ret))')
(-67, 0, 'C', 2, '1454', 'target = h->is_streamed ? 0 : s->off')
(-257, -1, '-', 0, '-1474', 'seek_ret = http_seek_internal(h, target, SEEK_SET, 1)')
(-59, 0, 'D', 1, '1451', 'read_ret = http_buf_read(h, buf, size)')
(-254, -1, '-', 0, '-1470', 'err = ff_network_sleep_interruptible(1000U*1000*reconnect_delay, &h->interrupt_callback)')
(-202, -1, '-', 0, '-1452', 'while ((read_ret  < 0           && s->reconnect        && (!h->is_streamed || s->reconnect_streamed) && s->filesize > 0 && s->off < s->filesize)\\n        || (read_ret == AVERROR_EOF && s->reconnect_at_eof && (!h->is_streamed || s->reconnect_streamed)))')
(-256, -1, '-', 0, '-1473', 'reconnect_delay = 1 + 2*reconnect_delay')
(-258, -1, '-', 0, '-1475', 'if (seek_ret >= 0 && seek_ret != target)')
(-250, -1, '-', 0, '-1457', 'return read_ret;')
(-252, -1, '-', 0, '-1466', 'if (reconnect_delay > s->reconnect_delay_max)')
(-255, -1, '-', 0, '-1471', 'if (err != AVERROR(ETIMEDOUT))')
---------------------------
(-165, -194, 'CDG', 1)
(-165, -195, 'DDGread_ret', 1)
(-59, -150, 'DDGread_ret', 1)
(-8, -155, 'DDGs', 1)
(-50, -150, 'CDG', 1)
(-201, -195, 'DDGh', 1)
(-77, -147, 'CDG', 1)
(-59, -195, 'DDGh', 1)
(-59, -201, 'DDGsize', 1)
(-197, -199, 'CDG', 1)
(-196, -197, 'DDGerr', 1)
(-77, -147, 'DDGread_ret', 1)
(-194, -196, 'CDG', 1)
(-194, -195, 'DDGreconnect_delay', 1)
(-150, -147, 'DDGread_ret', 1)
(-165, -147, 'DDGread_ret', 1)
(-155, -165, 'CDG', 1)
(-59, -201, 'DDGbuf', 1)
(-77, -165, 'DDGread_ret', 1)
(-201, -155, 'DDGh', 1)
(-199, -200, 'DDGseek_ret', 1)
(-150, -77, 'DDGread_ret', 1)
(-59, -155, 'DDGh', 1)
(-195, -199, 'DDGh', 1)
(-150, -147, 'CDG', 1)
(-165, -147, 'CDG', 1)
(-77, -155, 'CDG', 1)
(-200, -150, 'CDG', 1)
(-150, -67, 'CDG', 1)
(-150, -77, 'CDG', 1)
(-197, -198, 'CDG', 1)
(-59, -201, 'DDGh', 1)
(-8, -165, 'DDGs', 1)
(-194, -195, 'CDG', 1)
(-201, -150, 'DDGread_ret', 1)
(-155, -147, 'CDG', 1)
(-198, -194, 'DDGreconnect_delay', 1)
(-8, -195, 'DDGs', 1)
(-195, -196, 'DDGh', 1)
(-195, -196, 'DDGreconnect_delay', 1)
(-200, -201, 'CDG', 1)
(-195, -67, 'DDGs->off', 1)
===========================
(-8, 0, 'D', 19, '1433', '*s = h->priv_data')
(-165, 1, '-', 0, '+1462', 'if (!(s->reconnect && s->filesize > 0 && s->off < s->filesize) &&\\n            !(s->reconnect_at_eof && read_ret == AVERROR_EOF))')
(-147, 0, 'D', 21, '1483', 'return read_ret;')
(-155, 1, '-', 0, '+1459', 'if (h->is_streamed && !s->reconnect_streamed)')
(-164, 1, '-', 0, '+1460', 'break;')
(-196, 1, '-', 0, '+1470', 'err = ff_network_sleep_interruptible(1000U*1000*reconnect_delay, &h->interrupt_callback)')
(-77, 0, 'C', 1, '1456', 'if (read_ret == AVERROR_EXIT)')
(-50, 0, 'C', 4, '1448', 'if (s->compressed)')
(-67, 0, 'C', 2, '1454', 'target = h->is_streamed ? 0 : s->off')
(-59, 0, 'D', 1, '1451', 'read_ret = http_buf_read(h, buf, size)')
(-154, 1, '-', 0, '+1457', 'break;')
(-150, 1, '-', 0, '+1452', 'while (read_ret < 0)')
(-199, 1, '-', 0, '+1474', 'seek_ret = http_seek_internal(h, target, SEEK_SET, 1)')
(-197, 1, '-', 0, '+1471', 'if (err != AVERROR(ETIMEDOUT))')
(-194, 1, '-', 0, '+1466', 'if (reconnect_delay > s->reconnect_delay_max)')
(-200, 1, '-', 0, '+1475', 'if (seek_ret >= 0 && seek_ret != target)')
(-195, 1, '-', 0, '+1469', 'av_log(h, AV_LOG_WARNING, "Will reconnect at %"PRIu64" in %d second(s), error=%s.\\n", s->off, reconnect_delay, av_err2str(read_ret))')
(-193, 1, '-', 0, '+1464', 'break;')
(-201, 1, '-', 0, '+1480', 'read_ret = http_buf_read(h, buf, size)')
(-198, 1, '-', 0, '+1473', 'reconnect_delay = 1 + 2*reconnect_delay')
