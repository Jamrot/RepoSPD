(-51, -4, 'CDG', -1)
(-51, -22, 'CDG', -1)
(-32, -4, 'CDG', 1)
(-32, -4, 'DDGhwaccels[i].id', 1)
(-29, -32, 'DDGselected_hwaccel_id', 1)
(-32, -22, 'CDG', 1)
(-32, -22, 'DDGhwaccels[i].id', 1)
(-4, -32, 'CDG', 1)
(-4, -32, 'DDGhwaccels[i].name', 1)
(-49, -51, 'DDGpix_fmt', -1)
(-198, -187, 'DDG*p', 1)
(-205, -94, 'DDGhwaccel', -1)
(-59, -198, 'DDGist', 1)
(-198, -66, 'DDG*p', 1)
(-66, -205, 'DDG*p', -1)
(-205, -194, 'DDG*p', -1)
(-79, -205, 'DDG*p', -1)
(-85, -198, 'CDG', 1)
(-205, -187, 'DDG*p', -1)
(-198, -194, 'DDG*p', 1)
(-66, -198, 'DDGp', 1)
(-59, -133, 'DDGist', -1)
(-198, -94, 'DDGhwaccel', 1)
(-59, -142, 'DDGist', -1)
(-198, -79, 'DDG*p', 1)
(-85, -205, 'CDG', -1)
(-66, -198, 'DDG*p', 1)
(-205, -66, 'DDG*p', -1)
(-59, -94, 'DDGist', -1)
(-79, -198, 'DDG*p', 1)
(-66, -205, 'DDGp', -1)
(-205, -79, 'DDG*p', -1)
===========================
(-51, -1, '-', 0, '-2789', 'if (hwaccels[i].pix_fmt == pix_fmt)')
(-32, 1, '-', 0, '+2789', 'if (hwaccels[i].pix_fmt == pix_fmt &&\\n            (!selected_hwaccel_id || selected_hwaccel_id == HWACCEL_AUTO || hwaccels[i].id == selected_hwaccel_id))')
(-4, 0, 'CD', 1, '2788', 'for (i = 0; hwaccels[i].name; i++)')
(-49, -1, '-', 0, '-2785', 'get_hwaccel (enum AVPixelFormat pix_fmt)')
(-22, 0, 'C', 2, '2791', 'return &hwaccels[i];')
(-29, 1, '-', 0, '+2785', 'get_hwaccel (enum AVPixelFormat pix_fmt,enum HWAccelID selected_hwaccel_id)')
(-94, 0, 'D', 1, '2809', 'if (!hwaccel ||\\n            (ist->active_hwaccel_id && ist->active_hwaccel_id != hwaccel->id) ||\\n            (ist->hwaccel_id != HWACCEL_AUTO && ist->hwaccel_id != hwaccel->id))')
(-79, 0, 'D', 6, '2802', '*desc = av_pix_fmt_desc_get(*p)')
(-133, 0, 'D', 10000, '2816', 'if (ist->hwaccel_id == hwaccel->id)')
(-194, 0, 'D', 29, '2837', 'return *p;')
(-187, 0, 'D', 25, '2833', 'ist->hwaccel_pix_fmt   = *p')
(-66, 0, 'D', 7, '2801', 'for (p = pix_fmts; *p != -1; p++)')
(-198, 1, '-', 0, '+2808', 'hwaccel = get_hwaccel(*p, ist->hwaccel_id)')
(-59, 0, 'D', 11, '2797', '*ist = s->opaque')
(-142, 0, 'D', 10000, '2817', 'av_log(NULL, AV_LOG_FATAL,\\n                       "%s hwaccel requested for input stream #%d:%d, "\\n                       "but cannot be initialized.\\n", hwaccel->name,\\n                       ist->file_index, ist->st->index)')
(-205, -1, '-', 0, '-2808', 'hwaccel = get_hwaccel(*p)')
(-85, 0, 'C', 3, '2805', 'if (!(desc->flags & AV_PIX_FMT_FLAG_HWACCEL))')
---------------------------
(-51, -4, 'CDG', -1)
(-51, -22, 'CDG', -1)
(-49, -51, 'DDGpix_fmt', -1)
(-205, -94, 'DDGhwaccel', -1)
(-66, -205, 'DDG*p', -1)
(-205, -194, 'DDG*p', -1)
(-79, -205, 'DDG*p', -1)
(-205, -187, 'DDG*p', -1)
(-59, -133, 'DDGist', -1)
(-59, -142, 'DDGist', -1)
(-85, -205, 'CDG', -1)
(-205, -66, 'DDG*p', -1)
(-59, -94, 'DDGist', -1)
(-66, -205, 'DDGp', -1)
(-205, -79, 'DDG*p', -1)
===========================
(-51, -1, '-', 0, '-2789', 'if (hwaccels[i].pix_fmt == pix_fmt)')
(-4, 0, 'CD', 1, '2788', 'for (i = 0; hwaccels[i].name; i++)')
(-49, -1, '-', 0, '-2785', 'get_hwaccel (enum AVPixelFormat pix_fmt)')
(-22, 0, 'C', 2, '2791', 'return &hwaccels[i];')
(-94, 0, 'D', 1, '2809', 'if (!hwaccel ||\\n            (ist->active_hwaccel_id && ist->active_hwaccel_id != hwaccel->id) ||\\n            (ist->hwaccel_id != HWACCEL_AUTO && ist->hwaccel_id != hwaccel->id))')
(-79, 0, 'D', 6, '2802', '*desc = av_pix_fmt_desc_get(*p)')
(-133, 0, 'D', 10000, '2816', 'if (ist->hwaccel_id == hwaccel->id)')
(-194, 0, 'D', 29, '2837', 'return *p;')
(-187, 0, 'D', 25, '2833', 'ist->hwaccel_pix_fmt   = *p')
(-66, 0, 'D', 7, '2801', 'for (p = pix_fmts; *p != -1; p++)')
(-59, 0, 'D', 11, '2797', '*ist = s->opaque')
(-142, 0, 'D', 10000, '2817', 'av_log(NULL, AV_LOG_FATAL,\\n                       "%s hwaccel requested for input stream #%d:%d, "\\n                       "but cannot be initialized.\\n", hwaccel->name,\\n                       ist->file_index, ist->st->index)')
(-205, -1, '-', 0, '-2808', 'hwaccel = get_hwaccel(*p)')
(-85, 0, 'C', 3, '2805', 'if (!(desc->flags & AV_PIX_FMT_FLAG_HWACCEL))')
---------------------------
(-32, -4, 'CDG', 1)
(-32, -4, 'DDGhwaccels[i].id', 1)
(-29, -32, 'DDGselected_hwaccel_id', 1)
(-32, -22, 'CDG', 1)
(-32, -22, 'DDGhwaccels[i].id', 1)
(-4, -32, 'CDG', 1)
(-4, -32, 'DDGhwaccels[i].name', 1)
(-198, -187, 'DDG*p', 1)
(-59, -198, 'DDGist', 1)
(-198, -66, 'DDG*p', 1)
(-85, -198, 'CDG', 1)
(-198, -194, 'DDG*p', 1)
(-66, -198, 'DDGp', 1)
(-198, -94, 'DDGhwaccel', 1)
(-198, -79, 'DDG*p', 1)
(-66, -198, 'DDG*p', 1)
(-79, -198, 'DDG*p', 1)
===========================
(-32, 1, '-', 0, '+2789', 'if (hwaccels[i].pix_fmt == pix_fmt &&\\n            (!selected_hwaccel_id || selected_hwaccel_id == HWACCEL_AUTO || hwaccels[i].id == selected_hwaccel_id))')
(-4, 0, 'CD', 1, '2788', 'for (i = 0; hwaccels[i].name; i++)')
(-22, 0, 'C', 2, '2791', 'return &hwaccels[i];')
(-29, 1, '-', 0, '+2785', 'get_hwaccel (enum AVPixelFormat pix_fmt,enum HWAccelID selected_hwaccel_id)')
(-94, 0, 'D', 1, '2809', 'if (!hwaccel ||\\n            (ist->active_hwaccel_id && ist->active_hwaccel_id != hwaccel->id) ||\\n            (ist->hwaccel_id != HWACCEL_AUTO && ist->hwaccel_id != hwaccel->id))')
(-79, 0, 'D', 6, '2802', '*desc = av_pix_fmt_desc_get(*p)')
(-133, 0, 'D', 10000, '2816', 'if (ist->hwaccel_id == hwaccel->id)')
(-194, 0, 'D', 29, '2837', 'return *p;')
(-187, 0, 'D', 25, '2833', 'ist->hwaccel_pix_fmt   = *p')
(-66, 0, 'D', 7, '2801', 'for (p = pix_fmts; *p != -1; p++)')
(-198, 1, '-', 0, '+2808', 'hwaccel = get_hwaccel(*p, ist->hwaccel_id)')
(-59, 0, 'D', 11, '2797', '*ist = s->opaque')
(-142, 0, 'D', 10000, '2817', 'av_log(NULL, AV_LOG_FATAL,\\n                       "%s hwaccel requested for input stream #%d:%d, "\\n                       "but cannot be initialized.\\n", hwaccel->name,\\n                       ist->file_index, ist->st->index)')
(-85, 0, 'C', 3, '2805', 'if (!(desc->flags & AV_PIX_FMT_FLAG_HWACCEL))')
