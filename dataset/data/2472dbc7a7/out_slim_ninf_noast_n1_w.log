(-215, -47, 'CDG', -1)
(-215, -182, 'CDG', -1)
(-184, -47, 'DDGdata[3]', 1)
(-184, -47, 'DDGdata[2]', 1)
(-215, -142, 'CDG', -1)
(-184, -47, 'DDGdata[1]', 1)
(-215, -47, 'DDGdata[4]', -1)
(-30, -184, 'CDG', 1)
(-215, -170, 'CDG', -1)
(-40, -47, 'DDGdata', -1)
(-184, -142, 'CDG', 1)
(-184, -168, 'CDG', 1)
(-184, -47, 'DDGdata', 1)
(-215, -47, 'DDGdata[1]', -1)
(-184, -47, 'DDGdata[0]', 1)
(-184, -177, 'CDG', 1)
(-215, -177, 'CDG', -1)
(-184, -47, 'CDG', 1)
(-40, -184, 'DDGdata', 1)
(-215, -47, 'DDGdata[2]', -1)
(-215, -47, 'DDGdata[3]', -1)
(-184, -47, 'DDGdata[4]', 1)
(-184, -170, 'CDG', 1)
(-184, -182, 'CDG', 1)
(-215, -168, 'CDG', -1)
(-40, -215, 'DDGdata', -1)
(-215, -47, 'DDGdata[0]', -1)
(-30, -215, 'CDG', -1)
===========================
(-142, 0, 'C', 21, '332', 'if (!av_stristr(vs->codec_attr, attr))')
(-168, 0, 'C', 26, '337', 'return;')
(-184, 1, '-', 0, '+311', 'if (data && (data[0] | data[1] | data[2]) == 0 && data[3] == 1 && (data[4] & 0x1F) == 7)')
(-215, -1, '-', 0, '-311', 'if ((data[0] | data[1] | data[2]) == 0 && data[3] == 1 && (data[4] & 0x1F) == 7)')
(-40, 0, 'D', 1, '310', '*data = st->codecpar->extradata')
(-170, 0, 'C', 29, '340', "vs->codec_attr[0] = '\\0'")
(-182, 0, 'C', 31, '342', 'return;')
(-30, 0, 'C', 2, '309', 'if (st->codecpar->codec_id == AV_CODEC_ID_H264)')
(-47, 0, 'C', 1, '312', 'snprintf(attr, sizeof(attr),\\n                     "avc1.%02x%02x%02x", data[5], data[6], data[7])')
(-177, 0, 'C', 30, '341', 'vs->attr_status = CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN')
---------------------------
(-215, -47, 'CDG', -1)
(-215, -182, 'CDG', -1)
(-215, -142, 'CDG', -1)
(-215, -47, 'DDGdata[4]', -1)
(-215, -170, 'CDG', -1)
(-40, -47, 'DDGdata', -1)
(-215, -47, 'DDGdata[1]', -1)
(-215, -177, 'CDG', -1)
(-215, -47, 'DDGdata[2]', -1)
(-215, -47, 'DDGdata[3]', -1)
(-215, -168, 'CDG', -1)
(-40, -215, 'DDGdata', -1)
(-215, -47, 'DDGdata[0]', -1)
(-30, -215, 'CDG', -1)
===========================
(-142, 0, 'C', 21, '332', 'if (!av_stristr(vs->codec_attr, attr))')
(-168, 0, 'C', 26, '337', 'return;')
(-215, -1, '-', 0, '-311', 'if ((data[0] | data[1] | data[2]) == 0 && data[3] == 1 && (data[4] & 0x1F) == 7)')
(-40, 0, 'D', 1, '310', '*data = st->codecpar->extradata')
(-170, 0, 'C', 29, '340', "vs->codec_attr[0] = '\\0'")
(-182, 0, 'C', 31, '342', 'return;')
(-30, 0, 'C', 2, '309', 'if (st->codecpar->codec_id == AV_CODEC_ID_H264)')
(-47, 0, 'C', 1, '312', 'snprintf(attr, sizeof(attr),\\n                     "avc1.%02x%02x%02x", data[5], data[6], data[7])')
(-177, 0, 'C', 30, '341', 'vs->attr_status = CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN')
---------------------------
(-184, -47, 'DDGdata[3]', 1)
(-184, -47, 'DDGdata[2]', 1)
(-184, -47, 'DDGdata[1]', 1)
(-30, -184, 'CDG', 1)
(-184, -142, 'CDG', 1)
(-184, -168, 'CDG', 1)
(-184, -47, 'DDGdata', 1)
(-184, -47, 'DDGdata[0]', 1)
(-184, -177, 'CDG', 1)
(-184, -47, 'CDG', 1)
(-40, -184, 'DDGdata', 1)
(-184, -47, 'DDGdata[4]', 1)
(-184, -170, 'CDG', 1)
(-184, -182, 'CDG', 1)
===========================
(-142, 0, 'C', 21, '332', 'if (!av_stristr(vs->codec_attr, attr))')
(-168, 0, 'C', 26, '337', 'return;')
(-184, 1, '-', 0, '+311', 'if (data && (data[0] | data[1] | data[2]) == 0 && data[3] == 1 && (data[4] & 0x1F) == 7)')
(-40, 0, 'D', 1, '310', '*data = st->codecpar->extradata')
(-170, 0, 'C', 29, '340', "vs->codec_attr[0] = '\\0'")
(-182, 0, 'C', 31, '342', 'return;')
(-30, 0, 'C', 2, '309', 'if (st->codecpar->codec_id == AV_CODEC_ID_H264)')
(-47, 0, 'C', 1, '312', 'snprintf(attr, sizeof(attr),\\n                     "avc1.%02x%02x%02x", data[5], data[6], data[7])')
(-177, 0, 'C', 30, '341', 'vs->attr_status = CODEC_ATTRIBUTE_WILL_NOT_BE_WRITTEN')
