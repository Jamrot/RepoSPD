(-160, -196, 'DDGvec10', 1)
(-187, -196, 'DDGres0', 1)
(-231, -276, 'DDGvec9', 1)
(-319, -375, 'DDGsrc4', 1)
(-5, -402, 'DDGstride', -1)
(-276, -285, 'DDGres5', 1)
(-54, -209, 'DDGplus20b', 1)
(-351, -187, 'DDGres3', 1)
(-92, -124, 'DDGsrc0', 1)
(-385, -390, 'DDGdst2', 1)
(-85, -97, 'CDG', 1)
(-100, -105, 'DDGsrc', 1)
(-240, -285, 'DDGvec4', 1)
(-5, -121, 'DDGstride', 1)
(-85, -397, 'CDG', 1)
(-397, -121, 'DDGstride', 1)
(-160, -178, 'DDGsrc3', 1)
(-298, -333, 'DDGres7', 1)
(-209, -267, 'DDGvec11', 1)
(-85, -351, 'CDG', 1)
(-339, -351, 'DDGres0', 1)
(-285, -151, 'DDGvec1', 1)
(-385, -390, 'DDGdst3', 1)
(-327, -339, 'DDGres0', 1)
(-311, -365, 'DDGsrc0', 1)
(-285, -298, 'DDGres6', 1)
(-58, -151, 'DDGmask1', 1)
(-267, -169, 'DDGmask2', 1)
(-249, -151, 'DDGmask1', 1)
(-258, -267, 'DDGmask2', 1)
(-85, -133, 'CDG', 1)
(-108, -113, 'DDGsrc', 1)
(-258, -319, 'DDGsrc5', 1)
(-358, -276, 'DDGres6', 1)
(-108, -124, 'DDGsrc5', 1)
(-276, -285, 'DDGres4', 1)
(-267, -319, 'DDGsrc6', 1)
(-196, -209, 'DDGres3', 1)
(-209, -258, 'DDGvec2', 1)
(-231, -249, 'DDGsrc7', 1)
(-267, -169, 'DDGmask5', 1)
(-375, -108, 'DDGsrc4', 1)
(-169, -209, 'DDGvec2', 1)
(-222, -231, 'DDGmask0', 1)
(-133, -187, 'DDGvec3', 1)
(-5, -105, 'DDGstride', 1)
(-178, -311, 'DDGsrc2', 1)
(-85, -249, 'CDG', 1)
(-85, -358, 'CDG', 1)
(-92, -97, 'DDGsrc', 1)
(-85, -327, 'CDG', 1)
(-351, -370, 'DDGdst1', 1)
(-85, -345, 'CDG', 1)
(-240, -249, 'DDGmask4', 1)
(-169, -311, 'DDGsrc1', 1)
(-72, -151, 'DDGmask4', 1)
(-390, -397, 'DDGstride', 1)
(-85, -258, 'CDG', 1)
(-249, -267, 'DDGsrc6', 1)
(-85, -124, 'CDG', 1)
(-319, -380, 'DDGsrc6', 1)
(-209, -327, 'DDGres1', 1)
(-133, -187, 'DDGvec0', 1)
(-249, -151, 'DDGmask4', 1)
(-370, -100, 'DDGsrc2', 1)
(-85, -121, 'CDG', 1)
(-85, -222, 'CDG', 1)
(-390, -351, 'DDGdst0', 1)
(-351, -187, 'DDGres2', 1)
(-298, -178, 'DDGvec8', 1)
(-196, -209, 'DDGres1', 1)
(-249, -285, 'DDGvec7', 1)
(-209, -327, 'DDGres0', 1)
(-285, -298, 'DDGres7', 1)
(-178, -258, 'DDGmask5', 1)
(-385, -390, 'DDGdst1', 1)
(-85, -375, 'CDG', 1)
(-358, -276, 'DDGres7', 1)
(-85, -385, 'CDG', 1)
(-196, -209, 'DDGres0', 1)
(-240, -249, 'DDGmask1', 1)
(-196, -240, 'DDGvec4', 1)
(-178, -311, 'DDGsrc3', 1)
(-258, -319, 'DDGsrc4', 1)
(-85, -311, 'CDG', 1)
(-85, -113, 'CDG', 1)
(-113, -116, 'DDGsrc', 1)
(-345, -358, 'DDGres7', 1)
(-151, -160, 'DDGmask4', 1)
(-187, -196, 'DDGres3', 1)
(-85, -298, 'CDG', 1)
(-85, -339, 'CDG', 1)
(-258, -298, 'DDGvec2', 1)
(-116, -124, 'DDGsrc7', 1)
(-85, -151, 'CDG', 1)
(-151, -196, 'DDGvec1', 1)
(-390, -358, 'DDGdst3', 1)
(-298, -169, 'DDGvec5', 1)
(-298, -333, 'DDGres5', 1)
(-92, -124, 'DDGsrc1', 1)
(-298, -333, 'DDGres6', 1)
(-358, -375, 'DDGdst2', 1)
(-124, -142, 'DDGsrc3', 1)
(-240, -258, 'DDGsrc5', 1)
(-222, -276, 'DDGvec3', 1)
(-85, -105, 'CDG', 1)
(-267, -298, 'DDGvec11', 1)
(-160, -196, 'DDGvec7', 1)
(-85, -92, 'CDG', 1)
(-5, -113, 'DDGstride', 1)
(-97, -100, 'DDGsrc', 1)
(-108, -124, 'DDGsrc4', 1)
(-85, -240, 'CDG', 1)
(-85, -267, 'CDG', 1)
(-178, -209, 'DDGvec8', 1)
(-48, -196, 'DDGminus5b', 1)
(-327, -339, 'DDGres3', 1)
(-151, -160, 'DDGmask1', 1)
(-196, -285, 'DDGminus5b', 1)
(-333, -345, 'DDGres4', 1)
(-365, -92, 'DDGsrc0', 1)
(-380, -116, 'DDGsrc6', 1)
(-142, -222, 'DDGmask3', 1)
(-231, -276, 'DDGvec6', 1)
(-85, -231, 'CDG', 1)
(-351, -365, 'DDGdst0', 1)
(-85, -333, 'CDG', 1)
(-58, -133, 'DDGmask0', 1)
(-142, -222, 'DDGmask0', 1)
(-151, -169, 'DDGsrc0', 1)
(-67, -133, 'DDGmask3', 1)
(-58, -72, 'DDGmask1', 1)
(-390, -358, 'DDGdst2', 1)
(-209, -267, 'DDGvec8', 1)
(-258, -267, 'DDGmask5', 1)
(-85, -365, 'CDG', 1)
(-375, -385, 'DDGdst2', 1)
(-105, -108, 'DDGsrc', 1)
(-187, -231, 'DDGvec9', 1)
(-124, -142, 'DDGsrc2', 1)
(-298, -333, 'DDGres4', 1)
(-124, -222, 'DDGsrc4', 1)
(-333, -345, 'DDGres5', 1)
(-333, -345, 'DDGres7', 1)
(-124, -231, 'DDGsrc7', 1)
(-285, -160, 'DDGvec7', 1)
(-85, -187, 'CDG', 1)
(-85, -160, 'CDG', 1)
(-151, -196, 'DDGvec4', 1)
(-77, -169, 'DDGmask5', 1)
(-187, -222, 'DDGvec3', 1)
(-196, -249, 'DDGvec10', 1)
(-85, -178, 'CDG', 1)
(-276, -285, 'DDGres6', 1)
(-196, -240, 'DDGvec1', 1)
(-285, -298, 'DDGres5', 1)
(-240, -285, 'DDGvec1', 1)
(-209, -327, 'DDGres3', 1)
(-231, -249, 'DDGsrc6', 1)
(-85, -276, 'CDG', 1)
(-209, -258, 'DDGvec5', 1)
(-276, -142, 'DDGvec9', 1)
(-358, -380, 'DDGdst3', 1)
(-58, -169, 'DDGmask2', 1)
(-187, -196, 'DDGres2', 1)
(-124, -222, 'DDGsrc5', 1)
(-397, -390, 'DDGdst', 1)
(-169, -209, 'DDGvec5', 1)
(-85, -116, 'CDG', 1)
(-311, -370, 'DDGsrc2', 1)
(-124, -133, 'DDGsrc0', 1)
(-298, -209, 'DDGplus20b', 1)
(-240, -258, 'DDGsrc4', 1)
(-285, -151, 'DDGvec4', 1)
(-311, -92, 'DDGsrc1', 1)
(-169, -178, 'DDGmask2', 1)
(-142, -160, 'DDGsrc2', 1)
(-351, -187, 'DDGres1', 1)
(-339, -351, 'DDGres2', 1)
(-82, -92, 'DDGsrc', 1)
(-327, -339, 'DDGres2', 1)
(-85, -370, 'CDG', 1)
(-187, -231, 'DDGvec6', 1)
(-222, -276, 'DDGvec0', 1)
(-339, -351, 'DDGres3', 1)
(-351, -187, 'DDGres0', 1)
(-85, -108, 'CDG', 1)
(-169, -178, 'DDGmask5', 1)
(-285, -196, 'DDGminus5b', 1)
(-231, -133, 'DDGmask3', 1)
(-142, -187, 'DDGvec6', 1)
(-285, -298, 'DDGres4', 1)
(-85, -196, 'CDG', 1)
(-160, -240, 'DDGmask4', 1)
(-267, -319, 'DDGsrc7', 1)
(-222, -240, 'DDGsrc5', 1)
(-358, -276, 'DDGres4', 1)
(-397, -113, 'DDGstride', 1)
(-276, -285, 'DDGres7', 1)
(-85, -100, 'CDG', 1)
(-345, -358, 'DDGres4', 1)
(-187, -196, 'DDGres1', 1)
(-85, -209, 'CDG', 1)
(-276, -142, 'DDGvec6', 1)
(-5, -390, 'DDGstride', 1)
(-58, -77, 'DDGmask2', 1)
(-397, -390, 'DDGstride', 1)
(-85, -285, 'CDG', 1)
(-100, -124, 'DDGsrc2', 1)
(-319, -116, 'DDGsrc7', 1)
(-178, -209, 'DDGvec11', 1)
(-258, -298, 'DDGvec5', 1)
(-116, -124, 'DDGsrc6', 1)
(-142, -160, 'DDGsrc3', 1)
(-133, -151, 'DDGsrc1', 1)
(-267, -298, 'DDGvec8', 1)
(-121, -92, 'DDGsrc', 1)
(-142, -187, 'DDGvec9', 1)
(-249, -267, 'DDGsrc7', 1)
(-339, -351, 'DDGres1', 1)
(-397, -105, 'DDGstride', 1)
(-327, -339, 'DDGres1', 1)
(-133, -142, 'DDGmask3', 1)
(-333, -345, 'DDGres6', 1)
(-58, -67, 'DDGmask0', 1)
(-151, -169, 'DDGsrc1', 1)
(-358, -276, 'DDGres5', 1)
(-160, -240, 'DDGmask1', 1)
(-319, -108, 'DDGsrc5', 1)
(-133, -142, 'DDGmask0', 1)
(-390, -397, 'DDGdst', 1)
(-345, -358, 'DDGres5', 1)
(-209, -327, 'DDGres2', 1)
(-209, -298, 'DDGplus20b', 1)
(-276, -133, 'DDGvec3', 1)
(-5, -97, 'DDGstride', 1)
(-397, -97, 'DDGstride', 1)
(-380, -385, 'DDGdst3', 1)
(-187, -222, 'DDGvec0', 1)
(-196, -209, 'DDGres2', 1)
(-370, -385, 'DDGdst1', 1)
(-298, -178, 'DDGvec11', 1)
(-285, -160, 'DDGvec10', 1)
(-365, -385, 'DDGdst0', 1)
(-345, -358, 'DDGres6', 1)
(-249, -285, 'DDGvec10', 1)
(-169, -311, 'DDGsrc0', 1)
(-385, -390, 'DDGdst0', 1)
(-133, -151, 'DDGsrc0', 1)
(-85, -142, 'CDG', 1)
(-100, -124, 'DDGsrc3', 1)
(-276, -133, 'DDGvec0', 1)
(-231, -133, 'DDGmask0', 1)
(-116, -121, 'DDGsrc', 1)
(-390, -351, 'DDGdst1', 1)
(-298, -169, 'DDGvec2', 1)
(-160, -178, 'DDGsrc2', 1)
(-196, -249, 'DDGvec7', 1)
(-311, -100, 'DDGsrc3', 1)
(-222, -231, 'DDGmask3', 1)
(-85, -380, 'CDG', 1)
(-85, -390, 'CDG', 1)
(-124, -231, 'DDGsrc6', 1)
(-124, -133, 'DDGsrc1', 1)
(-178, -258, 'DDGmask2', 1)
(-222, -240, 'DDGsrc4', 1)
(-85, -169, 'CDG', 1)
(-85, -319, 'CDG', 1)
(-777, -782, 'DDGtmp0', 1)
(-620, -629, 'DDGvec6', 1)
(-777, -782, 'DDGtmp1', 1)
(-531, -562, 'DDGsrc2', 1)
(-629, -660, 'DDGres6', 1)
(-689, -712, 'DDGsrc5', 1)
(-486, -495, 'DDGsrc1', 1)
(-719, -731, 'DDGres1', 1)
(-571, -719, 'DDGres1', 1)
(-454, -540, 'DDGminus5b', 1)
(-660, -725, 'DDGres4', 1)
(-593, -620, 'DDGsrc6', 1)
(-495, -513, 'DDGvec0', 1)
(-673, -705, 'DDGsrc1', 1)
(-611, -620, 'DDGmask1', 1)
(-571, -719, 'DDGres0', 1)
(-705, -762, 'DDGsrc1', 1)
(-562, -571, 'DDGvec11', 1)
(-651, -660, 'DDGvec11', 1)
(-705, -757, 'DDGsrc0', 1)
(-584, -602, 'DDGvec1', 1)
(-531, -540, 'DDGvec6', 1)
(-651, -697, 'DDGsrc6', 1)
(-620, -651, 'DDGsrc7', 1)
(-571, -651, 'DDGvec11', 1)
(-602, -629, 'DDGres7', 1)
(-660, -725, 'DDGres5', 1)
(-750, -772, 'DDGtmp3', 1)
(-540, -629, 'DDGminus5b', 1)
(-473, -486, 'DDGsrc2', 1)
(-522, -531, 'DDGmask1', 1)
(-495, -522, 'DDGsrc0', 1)
(-486, -593, 'DDGsrc7', 1)
(-540, -571, 'DDGres0', 1)
(-504, -513, 'DDGvec3', 1)
(-562, -681, 'DDGsrc2', 1)
(-762, -777, 'DDGtmp1', 1)
(-522, -553, 'DDGsrc1', 1)
(-642, -689, 'DDGsrc4', 1)
(-464, -522, 'DDGmask1', 1)
(-731, -743, 'DDGres1', 1)
(-584, -611, 'DDGsrc5', 1)
(-712, -767, 'DDGsrc4', 1)
(-772, -777, 'DDGtmp3', 1)
(-689, -712, 'DDGsrc4', 1)
(-486, -584, 'DDGsrc5', 1)
(-731, -743, 'DDGres0', 1)
(-719, -731, 'DDGres0', 1)
(-737, -750, 'DDGres7', 1)
(-473, -486, 'DDGsrc3', 1)
(-513, -593, 'DDGvec3', 1)
(-473, -486, 'DDGsrc0', 1)
(-562, -571, 'DDGvec10', 1)
(-651, -660, 'DDGvec10', 1)
(-415, -789, 'DDGstride', -1)
(-531, -562, 'DDGsrc3', 1)
(-719, -731, 'DDGres3', 1)
(-562, -681, 'DDGsrc3', 1)
(-697, -712, 'DDGsrc6', 1)
(-473, -782, 'DDGstride', 1)
(-584, -593, 'DDGmask0', 1)
(-473, -486, 'DDGsrc5', 1)
(-642, -660, 'DDGvec9', 1)
(-571, -651, 'DDGvec10', 1)
(-611, -629, 'DDGvec4', 1)
(-611, -642, 'DDGsrc4', 1)
(-593, -602, 'DDGvec3', 1)
(-611, -629, 'DDGvec5', 1)
(-473, -486, 'DDGsrc7', 1)
(-660, -725, 'DDGres6', 1)
(-540, -620, 'DDGvec6', 1)
(-750, -767, 'DDGtmp2', 1)
(-513, -584, 'DDGvec0', 1)
(-737, -750, 'DDGres4', 1)
(-553, -571, 'DDGvec9', 1)
(-673, -705, 'DDGsrc0', 1)
(-495, -513, 'DDGvec1', 1)
(-584, -602, 'DDGvec0', 1)
(-629, -660, 'DDGres5', 1)
(-681, -705, 'DDGsrc2', 1)
(-629, -660, 'DDGres7', 1)
(-553, -673, 'DDGsrc0', 1)
(-464, -495, 'DDGmask0', 1)
(-725, -737, 'DDGres5', 1)
(-504, -513, 'DDGvec2', 1)
(-531, -611, 'DDGmask1', 1)
(-584, -611, 'DDGsrc4', 1)
(-540, -611, 'DDGvec4', 1)
(-697, -712, 'DDGsrc7', 1)
(-620, -651, 'DDGsrc6', 1)
(-540, -611, 'DDGvec5', 1)
(-522, -540, 'DDGvec4', 1)
(-495, -522, 'DDGsrc1', 1)
(-522, -540, 'DDGvec5', 1)
(-540, -571, 'DDGres2', 1)
(-540, -571, 'DDGres3', 1)
(-602, -629, 'DDGres4', 1)
(-473, -486, 'DDGsrc6', 1)
(-513, -540, 'DDGres2', 1)
(-642, -651, 'DDGmask2', 1)
(-681, -705, 'DDGsrc3', 1)
(-757, -777, 'DDGtmp0', 1)
(-513, -540, 'DDGres3', 1)
(-460, -571, 'DDGplus20b', 1)
(-731, -743, 'DDGres3', 1)
(-719, -731, 'DDGres2', 1)
(-602, -629, 'DDGres5', 1)
(-602, -629, 'DDGres6', 1)
(-486, -593, 'DDGsrc6', 1)
(-725, -737, 'DDGres4', 1)
(-767, -777, 'DDGtmp2', 1)
(-660, -725, 'DDGres7', 1)
(-629, -660, 'DDGres4', 1)
(-473, -486, 'DDGsrc4', 1)
(-712, -772, 'DDGsrc5', 1)
(-571, -642, 'DDGvec8', 1)
(-593, -602, 'DDGvec2', 1)
(-473, -486, 'DDGsrc1', 1)
(-464, -553, 'DDGmask2', 1)
(-593, -620, 'DDGsrc7', 1)
(-531, -540, 'DDGvec7', 1)
(-651, -697, 'DDGsrc7', 1)
(-486, -495, 'DDGsrc0', 1)
(-553, -562, 'DDGmask2', 1)
(-611, -642, 'DDGsrc5', 1)
(-504, -584, 'DDGmask0', 1)
(-486, -504, 'DDGsrc2', 1)
(-743, -762, 'DDGtmp1', 1)
(-513, -540, 'DDGres1', 1)
(-743, -757, 'DDGtmp0', 1)
(-513, -540, 'DDGres0', 1)
(-725, -737, 'DDGres6', 1)
(-495, -504, 'DDGmask0', 1)
(-540, -620, 'DDGvec7', 1)
(-504, -531, 'DDGsrc2', 1)
(-777, -782, 'DDGtmp3', 1)
(-571, -660, 'DDGplus20b', 1)
(-737, -750, 'DDGres5', 1)
(-737, -750, 'DDGres6', 1)
(-562, -642, 'DDGmask2', 1)
(-553, -673, 'DDGsrc1', 1)
(-513, -584, 'DDGvec1', 1)
(-513, -593, 'DDGvec2', 1)
(-415, -473, 'DDGstride', 1)
(-486, -504, 'DDGsrc3', 1)
(-620, -629, 'DDGvec7', 1)
(-731, -743, 'DDGres2', 1)
(-642, -660, 'DDGvec8', 1)
(-571, -642, 'DDGvec9', 1)
(-571, -719, 'DDGres2', 1)
(-777, -782, 'DDGtmp2', 1)
(-522, -553, 'DDGsrc0', 1)
(-571, -719, 'DDGres3', 1)
(-553, -571, 'DDGvec8', 1)
(-504, -531, 'DDGsrc3', 1)
(-725, -737, 'DDGres7', 1)
(-540, -571, 'DDGres1', 1)
(-486, -584, 'DDGsrc4', 1)
(-642, -689, 'DDGsrc5', 1)
(-927, -958, 'DDGres2', 1)
(-927, -958, 'DDGres3', 1)
(-949, -1029, 'DDGmask2', 1)
(-860, -873, 'DDGsrc6', 1)
(-900, -927, 'DDGres2', 1)
(-1029, -1038, 'DDGmask2', 1)
(-1038, -1084, 'DDGsrc6', 1)
(-900, -927, 'DDGres3', 1)
(-998, -1029, 'DDGsrc4', 1)
(-1047, -1112, 'DDGres5', 1)
(-873, -980, 'DDGsrc6', 1)
(-940, -949, 'DDGmask2', 1)
(-1154, -1164, 'DDGtmp2', 1)
(-909, -940, 'DDGsrc0', 1)
(-841, -927, 'DDGminus5b', 1)
(-1016, -1047, 'DDGres4', 1)
(-860, -873, 'DDGsrc4', 1)
(-860, -1169, 'DDGstride', 1)
(-1106, -1118, 'DDGres1', 1)
(-1029, -1047, 'DDGvec9', 1)
(-860, -873, 'DDGsrc1', 1)
(-958, -1038, 'DDGvec11', 1)
(-1164, -1169, 'DDGtmp3', 1)
(-1137, -1154, 'DDGtmp2', 1)
(-949, -1068, 'DDGsrc2', 1)
(-998, -1029, 'DDGsrc5', 1)
(-971, -989, 'DDGvec1', 1)
(-891, -900, 'DDGvec2', 1)
(-900, -927, 'DDGres1', 1)
(-989, -1016, 'DDGres5', 1)
(-1118, -1130, 'DDGres0', 1)
(-1007, -1038, 'DDGsrc6', 1)
(-882, -891, 'DDGmask0', 1)
(-927, -1007, 'DDGvec7', 1)
(-1124, -1137, 'DDGres5', 1)
(-1047, -1112, 'DDGres4', 1)
(-940, -1060, 'DDGsrc1', 1)
(-900, -971, 'DDGvec1', 1)
(-900, -980, 'DDGvec2', 1)
(-1144, -1164, 'DDGtmp0', 1)
(-802, -1176, 'DDGstride', -1)
(-949, -1068, 'DDGsrc3', 1)
(-851, -940, 'DDGmask2', 1)
(-1007, -1016, 'DDGvec7', 1)
(-918, -927, 'DDGvec6', 1)
(-971, -998, 'DDGsrc5', 1)
(-1164, -1169, 'DDGtmp0', 1)
(-1112, -1124, 'DDGres4', 1)
(-1029, -1047, 'DDGvec8', 1)
(-1047, -1112, 'DDGres6', 1)
(-989, -1016, 'DDGres4', 1)
(-860, -873, 'DDGsrc2', 1)
(-958, -1029, 'DDGvec8', 1)
(-882, -909, 'DDGsrc0', 1)
(-1099, -1159, 'DDGsrc5', 1)
(-1106, -1118, 'DDGres0', 1)
(-940, -958, 'DDGvec8', 1)
(-980, -1007, 'DDGsrc6', 1)
(-958, -1038, 'DDGvec10', 1)
(-1137, -1159, 'DDGtmp3', 1)
(-1112, -1124, 'DDGres5', 1)
(-873, -882, 'DDGsrc1', 1)
(-927, -958, 'DDGres1', 1)
(-1038, -1047, 'DDGvec11', 1)
(-1112, -1124, 'DDGres6', 1)
(-851, -882, 'DDGmask0', 1)
(-891, -971, 'DDGmask0', 1)
(-909, -940, 'DDGsrc1', 1)
(-847, -958, 'DDGplus20b', 1)
(-1124, -1137, 'DDGres4', 1)
(-1060, -1092, 'DDGsrc0', 1)
(-918, -998, 'DDGmask1', 1)
(-1029, -1076, 'DDGsrc5', 1)
(-1007, -1016, 'DDGvec6', 1)
(-1016, -1047, 'DDGres6', 1)
(-900, -927, 'DDGres0', 1)
(-989, -1016, 'DDGres6', 1)
(-1164, -1169, 'DDGtmp2', 1)
(-1124, -1137, 'DDGres6', 1)
(-909, -918, 'DDGmask1', 1)
(-882, -900, 'DDGvec0', 1)
(-998, -1007, 'DDGmask1', 1)
(-949, -958, 'DDGvec11', 1)
(-958, -1106, 'DDGres3', 1)
(-918, -949, 'DDGsrc2', 1)
(-1118, -1130, 'DDGres2', 1)
(-1118, -1130, 'DDGres3', 1)
(-851, -909, 'DDGmask1', 1)
(-971, -980, 'DDGmask0', 1)
(-860, -873, 'DDGsrc7', 1)
(-1076, -1099, 'DDGsrc4', 1)
(-1164, -1169, 'DDGtmp1', 1)
(-927, -1016, 'DDGminus5b', 1)
(-873, -891, 'DDGsrc2', 1)
(-1016, -1047, 'DDGres7', 1)
(-1076, -1099, 'DDGsrc5', 1)
(-802, -860, 'DDGstride', 1)
(-927, -958, 'DDGres0', 1)
(-989, -1016, 'DDGres7', 1)
(-891, -900, 'DDGvec3', 1)
(-1038, -1047, 'DDGvec10', 1)
(-918, -949, 'DDGsrc3', 1)
(-1029, -1076, 'DDGsrc4', 1)
(-958, -1047, 'DDGplus20b', 1)
(-873, -971, 'DDGsrc5', 1)
(-980, -989, 'DDGvec2', 1)
(-1130, -1144, 'DDGtmp0', 1)
(-873, -882, 'DDGsrc0', 1)
(-1124, -1137, 'DDGres7', 1)
(-873, -891, 'DDGsrc3', 1)
(-1092, -1144, 'DDGsrc0', 1)
(-860, -873, 'DDGsrc3', 1)
(-900, -980, 'DDGvec3', 1)
(-1060, -1092, 'DDGsrc1', 1)
(-1130, -1149, 'DDGtmp1', 1)
(-860, -873, 'DDGsrc0', 1)
(-971, -989, 'DDGvec0', 1)
(-971, -998, 'DDGsrc4', 1)
(-1068, -1092, 'DDGsrc2', 1)
(-1092, -1149, 'DDGsrc1', 1)
(-949, -958, 'DDGvec10', 1)
(-1047, -1112, 'DDGres7', 1)
(-1007, -1038, 'DDGsrc7', 1)
(-958, -1106, 'DDGres2', 1)
(-1084, -1099, 'DDGsrc7', 1)
(-940, -958, 'DDGvec9', 1)
(-860, -873, 'DDGsrc5', 1)
(-909, -927, 'DDGvec4', 1)
(-998, -1016, 'DDGvec4', 1)
(-909, -927, 'DDGvec5', 1)
(-998, -1016, 'DDGvec5', 1)
(-958, -1029, 'DDGvec9', 1)
(-918, -927, 'DDGvec7', 1)
(-1159, -1164, 'DDGtmp3', 1)
(-927, -1007, 'DDGvec6', 1)
(-891, -918, 'DDGsrc2', 1)
(-900, -971, 'DDGvec0', 1)
(-1038, -1084, 'DDGsrc7', 1)
(-882, -900, 'DDGvec1', 1)
(-1149, -1164, 'DDGtmp1', 1)
(-1112, -1124, 'DDGres7', 1)
(-873, -980, 'DDGsrc7', 1)
(-1016, -1047, 'DDGres5', 1)
(-940, -1060, 'DDGsrc0', 1)
(-1068, -1092, 'DDGsrc3', 1)
(-980, -989, 'DDGvec3', 1)
(-958, -1106, 'DDGres1', 1)
(-1106, -1118, 'DDGres2', 1)
(-927, -998, 'DDGvec4', 1)
(-980, -1007, 'DDGsrc7', 1)
(-873, -971, 'DDGsrc4', 1)
(-927, -998, 'DDGvec5', 1)
(-1099, -1154, 'DDGsrc4', 1)
(-891, -918, 'DDGsrc3', 1)
(-1118, -1130, 'DDGres1', 1)
(-1084, -1099, 'DDGsrc6', 1)
(-882, -909, 'DDGsrc1', 1)
(-1106, -1118, 'DDGres3', 1)
(-958, -1106, 'DDGres0', 1)
(-1269, -1460, 'CDG', 1)
(-1482, -1517, 'DDGres5', 1)
(-1482, -1517, 'DDGres6', 1)
(-1574, -1581, 'DDGstride', 1)
(-1574, -1535, 'DDGdst1', 1)
(-1251, -1317, 'DDGmask3', 1)
(-1380, -1469, 'DDGminus5b', 1)
(-1460, -1326, 'DDGvec6', 1)
(-1451, -1482, 'DDGvec11', 1)
(-1569, -1574, 'DDGdst3', 1)
(-1326, -1344, 'DDGsrc3', 1)
(-1308, -1317, 'DDGsrc0', 1)
(-1317, -1335, 'DDGsrc1', 1)
(-1189, -1297, 'DDGstride', 1)
(-1292, -1308, 'DDGsrc4', 1)
(-1269, -1549, 'CDG', 1)
(-1335, -1353, 'DDGsrc1', 1)
(-1362, -1495, 'DDGsrc3', 1)
(-1517, -1529, 'DDGres4', 1)
(-1335, -1344, 'DDGmask1', 1)
(-1317, -1326, 'DDGmask0', 1)
(-1284, -1289, 'DDGsrc', 1)
(-1344, -1424, 'DDGmask4', 1)
(-1529, -1542, 'DDGres7', 1)
(-1326, -1406, 'DDGmask3', 1)
(-1276, -1281, 'DDGsrc', 1)
(-1317, -1371, 'DDGvec0', 1)
(-1535, -1554, 'DDGdst1', 1)
(-1238, -1393, 'DDGplus20b', 1)
(-1308, -1326, 'DDGsrc3', 1)
(-1371, -1380, 'DDGres2', 1)
(-1442, -1482, 'DDGvec5', 1)
(-1362, -1393, 'DDGvec11', 1)
(-1300, -1308, 'DDGsrc6', 1)
(-1289, -1292, 'DDGsrc', 1)
(-1269, -1326, 'CDG', 1)
(-1371, -1415, 'DDGvec6', 1)
(-1451, -1353, 'DDGmask2', 1)
(-1442, -1451, 'DDGmask2', 1)
(-1569, -1574, 'DDGdst1', 1)
(-1495, -1554, 'DDGsrc2', 1)
(-1371, -1380, 'DDGres3', 1)
(-1269, -1344, 'CDG', 1)
(-1353, -1393, 'DDGvec2', 1)
(-1292, -1297, 'DDGsrc', 1)
(-1308, -1415, 'DDGsrc7', 1)
(-1406, -1460, 'DDGvec3', 1)
(-1523, -1535, 'DDGres2', 1)
(-1469, -1344, 'DDGvec7', 1)
(-1344, -1424, 'DDGmask1', 1)
(-1269, -1469, 'CDG', 1)
(-1564, -1300, 'DDGsrc6', 1)
(-1380, -1393, 'DDGres3', 1)
(-1581, -1305, 'DDGstride', 1)
(-1482, -1353, 'DDGvec5', 1)
(-1380, -1433, 'DDGvec10', 1)
(-1335, -1380, 'DDGvec1', 1)
(-1269, -1433, 'CDG', 1)
(-1542, -1460, 'DDGres5', 1)
(-1542, -1564, 'DDGdst3', 1)
(-1482, -1517, 'DDGres7', 1)
(-1542, -1559, 'DDGdst2', 1)
(-1297, -1300, 'DDGsrc', 1)
(-1269, -1362, 'CDG', 1)
(-1503, -1300, 'DDGsrc7', 1)
(-1406, -1460, 'DDGvec0', 1)
(-1424, -1433, 'DDGmask4', 1)
(-1371, -1415, 'DDGvec9', 1)
(-1353, -1495, 'DDGsrc0', 1)
(-1433, -1451, 'DDGsrc6', 1)
(-1535, -1371, 'DDGres3', 1)
(-1495, -1549, 'DDGsrc0', 1)
(-1353, -1362, 'DDGmask2', 1)
(-1469, -1335, 'DDGvec4', 1)
(-1266, -1276, 'DDGsrc', 1)
(-1523, -1535, 'DDGres0', 1)
(-1554, -1284, 'DDGsrc2', 1)
(-1242, -1261, 'DDGmask2', 1)
(-1261, -1353, 'DDGmask5', 1)
(-1300, -1305, 'DDGsrc', 1)
(-1511, -1523, 'DDGres2', 1)
(-1371, -1406, 'DDGvec3', 1)
(-1511, -1523, 'DDGres3', 1)
(-1529, -1542, 'DDGres5', 1)
(-1353, -1362, 'DDGmask5', 1)
(-1269, -1574, 'CDG', 1)
(-1276, -1308, 'DDGsrc0', 1)
(-1523, -1535, 'DDGres1', 1)
(-1393, -1451, 'DDGvec11', 1)
(-1424, -1433, 'DDGmask1', 1)
(-1269, -1353, 'CDG', 1)
(-1415, -1317, 'DDGmask3', 1)
(-1542, -1460, 'DDGres4', 1)
(-1433, -1469, 'DDGvec7', 1)
(-1344, -1380, 'DDGvec10', 1)
(-1482, -1393, 'DDGplus20b', 1)
(-1406, -1424, 'DDGsrc5', 1)
(-1362, -1442, 'DDGmask2', 1)
(-1308, -1317, 'DDGsrc1', 1)
(-1269, -1276, 'CDG', 1)
(-1326, -1406, 'DDGmask0', 1)
(-1269, -1317, 'CDG', 1)
(-1503, -1559, 'DDGsrc4', 1)
(-1517, -1529, 'DDGres7', 1)
(-1371, -1406, 'DDGvec0', 1)
(-1460, -1469, 'DDGres7', 1)
(-1495, -1284, 'DDGsrc3', 1)
(-1269, -1503, 'CDG', 1)
(-1393, -1442, 'DDGvec2', 1)
(-1189, -1574, 'DDGstride', 1)
(-1269, -1281, 'CDG', 1)
(-1495, -1276, 'DDGsrc1', 1)
(-1317, -1335, 'DDGsrc0', 1)
(-1362, -1442, 'DDGmask5', 1)
(-1269, -1305, 'CDG', 1)
(-1415, -1433, 'DDGsrc7', 1)
(-1442, -1482, 'DDGvec2', 1)
(-1232, -1380, 'DDGminus5b', 1)
(-1269, -1564, 'CDG', 1)
(-1281, -1284, 'DDGsrc', 1)
(-1380, -1424, 'DDGvec1', 1)
(-1451, -1482, 'DDGvec8', 1)
(-1517, -1529, 'DDGres6', 1)
(-1469, -1482, 'DDGres5', 1)
(-1380, -1393, 'DDGres2', 1)
(-1326, -1371, 'DDGvec9', 1)
(-1242, -1335, 'DDGmask1', 1)
(-1335, -1380, 'DDGvec4', 1)
(-1269, -1535, 'CDG', 1)
(-1269, -1380, 'CDG', 1)
(-1424, -1469, 'DDGvec4', 1)
(-1574, -1542, 'DDGdst3', 1)
(-1256, -1335, 'DDGmask4', 1)
(-1451, -1353, 'DDGmask5', 1)
(-1393, -1511, 'DDGres2', 1)
(-1442, -1451, 'DDGmask5', 1)
(-1393, -1511, 'DDGres3', 1)
(-1189, -1281, 'DDGstride', 1)
(-1529, -1542, 'DDGres4', 1)
(-1269, -1517, 'CDG', 1)
(-1269, -1523, 'CDG', 1)
(-1564, -1569, 'DDGdst3', 1)
(-1549, -1569, 'DDGdst0', 1)
(-1460, -1317, 'DDGvec3', 1)
(-1482, -1362, 'DDGvec11', 1)
(-1542, -1460, 'DDGres6', 1)
(-1371, -1380, 'DDGres1', 1)
(-1503, -1292, 'DDGsrc5', 1)
(-1433, -1469, 'DDGvec10', 1)
(-1269, -1284, 'CDG', 1)
(-1460, -1469, 'DDGres4', 1)
(-1535, -1371, 'DDGres2', 1)
(-1559, -1569, 'DDGdst2', 1)
(-1371, -1380, 'DDGres0', 1)
(-1569, -1574, 'DDGdst0', 1)
(-1469, -1380, 'DDGminus5b', 1)
(-1284, -1308, 'DDGsrc3', 1)
(-1362, -1393, 'DDGvec8', 1)
(-1380, -1393, 'DDGres0', 1)
(-1269, -1371, 'CDG', 1)
(-1460, -1326, 'DDGvec9', 1)
(-1460, -1317, 'DDGvec0', 1)
(-1415, -1317, 'DDGmask0', 1)
(-1269, -1415, 'CDG', 1)
(-1308, -1415, 'DDGsrc6', 1)
(-1353, -1393, 'DDGvec5', 1)
(-1269, -1300, 'CDG', 1)
(-1380, -1393, 'DDGres1', 1)
(-1344, -1362, 'DDGsrc2', 1)
(-1353, -1495, 'DDGsrc1', 1)
(-1242, -1256, 'DDGmask1', 1)
(-1326, -1371, 'DDGvec6', 1)
(-1469, -1482, 'DDGres4', 1)
(-1451, -1503, 'DDGsrc7', 1)
(-1482, -1517, 'DDGres4', 1)
(-1482, -1362, 'DDGvec8', 1)
(-1305, -1276, 'DDGsrc', 1)
(-1415, -1460, 'DDGvec9', 1)
(-1189, -1586, 'DDGstride', -1)
(-1276, -1308, 'DDGsrc1', 1)
(-1433, -1335, 'DDGmask4', 1)
(-1581, -1574, 'DDGstride', 1)
(-1542, -1460, 'DDGres7', 1)
(-1308, -1406, 'DDGsrc5', 1)
(-1269, -1569, 'CDG', 1)
(-1284, -1308, 'DDGsrc2', 1)
(-1535, -1371, 'DDGres1', 1)
(-1269, -1406, 'CDG', 1)
(-1269, -1542, 'CDG', 1)
(-1569, -1574, 'DDGdst2', 1)
(-1269, -1554, 'CDG', 1)
(-1269, -1581, 'CDG', 1)
(-1574, -1535, 'DDGdst0', 1)
(-1535, -1549, 'DDGdst0', 1)
(-1393, -1482, 'DDGplus20b', 1)
(-1581, -1281, 'DDGstride', 1)
(-1300, -1308, 'DDGsrc7', 1)
(-1269, -1335, 'CDG', 1)
(-1511, -1523, 'DDGres1', 1)
(-1335, -1353, 'DDGsrc0', 1)
(-1344, -1362, 'DDGsrc3', 1)
(-1269, -1495, 'CDG', 1)
(-1242, -1251, 'DDGmask0', 1)
(-1269, -1511, 'CDG', 1)
(-1503, -1564, 'DDGsrc6', 1)
(-1442, -1503, 'DDGsrc4', 1)
(-1393, -1451, 'DDGvec8', 1)
(-1269, -1289, 'CDG', 1)
(-1269, -1482, 'CDG', 1)
(-1469, -1335, 'DDGvec1', 1)
(-1424, -1442, 'DDGsrc4', 1)
(-1344, -1380, 'DDGvec7', 1)
(-1482, -1353, 'DDGvec2', 1)
(-1433, -1335, 'DDGmask1', 1)
(-1269, -1424, 'CDG', 1)
(-1442, -1503, 'DDGsrc5', 1)
(-1469, -1344, 'DDGvec10', 1)
(-1308, -1326, 'DDGsrc2', 1)
(-1269, -1559, 'CDG', 1)
(-1424, -1442, 'DDGsrc5', 1)
(-1292, -1308, 'DDGsrc5', 1)
(-1451, -1503, 'DDGsrc6', 1)
(-1242, -1317, 'DDGmask0', 1)
(-1559, -1292, 'DDGsrc4', 1)
(-1549, -1276, 'DDGsrc0', 1)
(-1406, -1415, 'DDGmask3', 1)
(-1317, -1371, 'DDGvec3', 1)
(-1415, -1460, 'DDGvec6', 1)
(-1406, -1415, 'DDGmask0', 1)
(-1269, -1393, 'CDG', 1)
(-1393, -1442, 'DDGvec5', 1)
(-1335, -1344, 'DDGmask4', 1)
(-1581, -1289, 'DDGstride', 1)
(-1433, -1451, 'DDGsrc7', 1)
(-1574, -1581, 'DDGdst', 1)
(-1317, -1326, 'DDGmask3', 1)
(-1406, -1424, 'DDGsrc4', 1)
(-1554, -1569, 'DDGdst1', 1)
(-1415, -1433, 'DDGsrc6', 1)
(-1380, -1433, 'DDGvec7', 1)
(-1529, -1542, 'DDGres6', 1)
(-1574, -1542, 'DDGdst2', 1)
(-1242, -1353, 'DDGmask2', 1)
(-1517, -1529, 'DDGres5', 1)
(-1460, -1469, 'DDGres5', 1)
(-1393, -1511, 'DDGres1', 1)
(-1269, -1529, 'CDG', 1)
(-1523, -1535, 'DDGres3', 1)
(-1189, -1289, 'DDGstride', 1)
(-1189, -1305, 'DDGstride', 1)
(-1269, -1292, 'CDG', 1)
(-1308, -1406, 'DDGsrc4', 1)
(-1269, -1308, 'CDG', 1)
(-1460, -1469, 'DDGres6', 1)
(-1393, -1511, 'DDGres0', 1)
(-1469, -1482, 'DDGres7', 1)
(-1362, -1495, 'DDGsrc2', 1)
(-1326, -1344, 'DDGsrc2', 1)
(-1269, -1451, 'CDG', 1)
(-1424, -1469, 'DDGvec1', 1)
(-1269, -1297, 'CDG', 1)
(-1380, -1424, 'DDGvec4', 1)
(-1581, -1574, 'DDGdst', 1)
(-1511, -1523, 'DDGres0', 1)
(-1535, -1371, 'DDGres0', 1)
(-1581, -1297, 'DDGstride', 1)
(-1269, -1442, 'CDG', 1)
(-1469, -1482, 'DDGres6', 1)
(-1723, -1743, 'DDGsrc3', 1)
(-1629, -1666, 'DDGmask1', 1)
(-1652, -1661, 'DDGvec1', 1)
(-1599, -1638, 'DDGstride', 1)
(-1682, -1715, 'DDGsrc0', 1)
(-1652, -1666, 'DDGsrc1', 1)
(-1702, -1706, 'DDGres0', 1)
(-1702, -1706, 'DDGres1', 1)
(-1666, -1682, 'DDGsrc0', 1)
(-1652, -1666, 'DDGsrc2', 1)
(-1619, -1675, 'DDGminus5b', 1)
(-1698, -1702, 'DDGres1', 1)
(-1682, -1723, 'DDGsrc2', 1)
(-1638, -1647, 'DDGsrc2', 1)
(-1599, -1790, 'DDGstride', -1)
(-1731, -1755, 'DDGsrc0', 1)
(-1625, -1691, 'DDGplus20b', 1)
(-1666, -1675, 'DDGvec2', 1)
(-1698, -1702, 'DDGres0', 1)
(-1647, -1652, 'DDGsrc3', 1)
(-1629, -1682, 'DDGmask2', 1)
(-1666, -1675, 'DDGvec3', 1)
(-1647, -1652, 'DDGsrc0', 1)
(-1666, -1682, 'DDGsrc2', 1)
(-1767, -1772, 'DDGres', 1)
(-1661, -1675, 'DDGres0', 1)
(-1661, -1675, 'DDGres1', 1)
(-1682, -1715, 'DDGsrc1', 1)
(-1755, -1767, 'DDGsrc0', 1)
(-1638, -1647, 'DDGsrc3', 1)
(-1652, -1661, 'DDGvec0', 1)
(-1723, -1743, 'DDGsrc2', 1)
(-1715, -1731, 'DDGsrc0', 1)
(-1638, -1647, 'DDGsrc0', 1)
(-1675, -1691, 'DDGres1', 1)
(-1743, -1755, 'DDGsrc1', 1)
(-1682, -1691, 'DDGvec5', 1)
(-1691, -1698, 'DDGres1', 1)
(-1706, -1767, 'DDGres', 1)
(-1666, -1682, 'DDGsrc1', 1)
(-1638, -1781, 'DDGstride', 1)
(-1652, -1666, 'DDGsrc3', 1)
(-1682, -1691, 'DDGvec4', 1)
(-1647, -1652, 'DDGsrc1', 1)
(-1682, -1723, 'DDGsrc3', 1)
(-1652, -1666, 'DDGsrc0', 1)
(-1647, -1652, 'DDGsrc2', 1)
(-1691, -1698, 'DDGres0', 1)
(-1715, -1731, 'DDGsrc1', 1)
(-1638, -1647, 'DDGsrc1', 1)
(-1629, -1652, 'DDGmask0', 1)
(-1772, -1781, 'DDGres', 1)
(-1675, -1691, 'DDGres0', 1)
(-1666, -1682, 'DDGsrc3', 1)
(-1842, -1851, 'DDGsrc3', 1)
(-1870, -1879, 'DDGvec2', 1)
(-1879, -1895, 'DDGres1', 1)
(-1842, -1851, 'DDGsrc0', 1)
(-1870, -1879, 'DDGvec3', 1)
(-1856, -1865, 'DDGvec1', 1)
(-1879, -1895, 'DDGres0', 1)
(-1927, -1947, 'DDGsrc2', 1)
(-1842, -1985, 'DDGstride', 1)
(-1886, -1919, 'DDGsrc0', 1)
(-1919, -1935, 'DDGsrc0', 1)
(-1803, -1842, 'DDGstride', 1)
(-1856, -1870, 'DDGsrc3', 1)
(-1833, -1870, 'DDGmask1', 1)
(-1870, -1886, 'DDGsrc2', 1)
(-1823, -1879, 'DDGminus5b', 1)
(-1947, -1959, 'DDGsrc1', 1)
(-1886, -1927, 'DDGsrc3', 1)
(-1971, -1976, 'DDGres', 1)
(-1856, -1870, 'DDGsrc0', 1)
(-1906, -1910, 'DDGres1', 1)
(-1906, -1910, 'DDGres0', 1)
(-1870, -1886, 'DDGsrc1', 1)
(-1935, -1959, 'DDGsrc0', 1)
(-1829, -1895, 'DDGplus20b', 1)
(-1851, -1856, 'DDGsrc3', 1)
(-1833, -1886, 'DDGmask2', 1)
(-1851, -1856, 'DDGsrc0', 1)
(-1842, -1851, 'DDGsrc2', 1)
(-1865, -1879, 'DDGres1', 1)
(-1927, -1947, 'DDGsrc3', 1)
(-1842, -1851, 'DDGsrc1', 1)
(-1856, -1865, 'DDGvec0', 1)
(-1976, -1985, 'DDGres', 1)
(-1959, -1971, 'DDGsrc0', 1)
(-1919, -1935, 'DDGsrc1', 1)
(-1886, -1919, 'DDGsrc1', 1)
(-1803, -1994, 'DDGstride', -1)
(-1856, -1870, 'DDGsrc1', 1)
(-1870, -1886, 'DDGsrc3', 1)
(-1865, -1879, 'DDGres0', 1)
(-1895, -1902, 'DDGres1', 1)
(-1910, -1971, 'DDGres', 1)
(-1902, -1906, 'DDGres1', 1)
(-1886, -1927, 'DDGsrc2', 1)
(-1856, -1870, 'DDGsrc2', 1)
(-1886, -1895, 'DDGvec4', 1)
(-1895, -1902, 'DDGres0', 1)
(-1886, -1895, 'DDGvec5', 1)
(-1851, -1856, 'DDGsrc2', 1)
(-1870, -1886, 'DDGsrc0', 1)
(-1902, -1906, 'DDGres0', 1)
(-1851, -1856, 'DDGsrc1', 1)
(-1833, -1856, 'DDGmask0', 1)
===========================
(-276, 1, '-', 0, '+3178', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res4, res5, res6, res7)')
(-327, 1, '-', 0, '+3185', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-142, 1, '-', 0, '+3162', 'VSHF_B2_SB(src2, src2, src2, src3, mask0, mask3, vec6, vec9)')
(-169, 1, '-', 0, '+3165', 'VSHF_B2_SB(src0, src0, src0, src1, mask2, mask5, vec2, vec5)')
(-178, 1, '-', 0, '+3166', 'VSHF_B2_SB(src2, src2, src2, src3, mask2, mask5, vec8, vec11)')
(-385, 1, '-', 0, '+3195', 'XORI_B4_128_SB(dst0, dst1, dst2, dst3)')
(-402, -1, '-', 0, '-3136', 'avc_luma_hz_qrt_16w_msa(src - 2, stride, dst, stride, 16, 1)')
(-249, 1, '-', 0, '+3175', 'VSHF_B2_SB(src6, src6, src6, src7, mask1, mask4, vec7, vec10)')
(-54, 1, '-', 0, '+3142', 'plus20b = __msa_ldi_b(20)')
(-351, 1, '-', 0, '+3189', 'PCKEV_B2_SB(res1, res0, res3, res2, dst0, dst1)')
(-82, 1, '-', 0, '+3148', 'src -= 2')
(-105, 1, '-', 0, '+3154', 'src += stride')
(-133, 1, '-', 0, '+3161', 'VSHF_B2_SB(src0, src0, src0, src1, mask0, mask3, vec0, vec3)')
(-358, 1, '-', 0, '+3190', 'PCKEV_B2_SB(res5, res4, res7, res6, dst2, dst3)')
(-267, 1, '-', 0, '+3177', 'VSHF_B2_SB(src6, src6, src6, src7, mask2, mask5, vec8, vec11)')
(-48, 1, '-', 0, '+3141', 'minus5b = __msa_ldi_b(-5)')
(-92, 1, '-', 0, '+3151', 'LD_SB2(src, 16, src0, src1)')
(-58, 1, '-', 0, '+3144', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-222, 1, '-', 0, '+3172', 'VSHF_B2_SB(src4, src4, src4, src5, mask0, mask3, vec0, vec3)')
(-121, 1, '-', 0, '+3158', 'src += stride')
(-196, 1, '-', 0, '+3168', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res0, res1, res2, res3)')
(-108, 1, '-', 0, '+3155', 'LD_SB2(src, 16, src4, src5)')
(-116, 1, '-', 0, '+3157', 'LD_SB2(src, 16, src6, src7)')
(-100, 1, '-', 0, '+3153', 'LD_SB2(src, 16, src2, src3)')
(-151, 1, '-', 0, '+3163', 'VSHF_B2_SB(src0, src0, src0, src1, mask1, mask4, vec1, vec4)')
(-124, 1, '-', 0, '+3160', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-5, 0, 'D', 2, '3134', 'ptrdiff_t stride')
(-67, 1, '-', 0, '+3145', 'mask3 = mask0 + 8')
(-319, 1, '-', 0, '+3184', 'SLDI_B2_SB(src5, src7, src4, src6, src4, src6, 3)')
(-258, 1, '-', 0, '+3176', 'VSHF_B2_SB(src4, src4, src4, src5, mask2, mask5, vec2, vec5)')
(-85, 1, '-', 0, '+3150', 'for (loop_cnt = 4; loop_cnt--;)')
(-345, 1, '-', 0, '+3188', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-209, 1, '-', 0, '+3170', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res0, res1, res2, res3)')
(-311, 1, '-', 0, '+3183', 'SLDI_B2_SB(src1, src3, src0, src2, src0, src2, 3)')
(-298, 1, '-', 0, '+3181', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res4, res5, res6, res7)')
(-370, 1, '-', 0, '+3192', 'dst1 = __msa_aver_s_b(dst1, src2)')
(-333, 1, '-', 0, '+3186', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-365, 1, '-', 0, '+3191', 'dst0 = __msa_aver_s_b(dst0, src0)')
(-240, 1, '-', 0, '+3174', 'VSHF_B2_SB(src4, src4, src4, src5, mask1, mask4, vec1, vec4)')
(-375, 1, '-', 0, '+3193', 'dst2 = __msa_aver_s_b(dst2, src4)')
(-285, 1, '-', 0, '+3179', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res4, res5, res6, res7)')
(-390, 1, '-', 0, '+3196', 'ST_SB4(dst0, dst1, dst2, dst3, dst, stride)')
(-77, 1, '-', 0, '+3147', 'mask5 = mask2 + 8')
(-397, 1, '-', 0, '+3197', 'dst += (4 * stride)')
(-160, 1, '-', 0, '+3164', 'VSHF_B2_SB(src2, src2, src2, src3, mask1, mask4, vec7, vec10)')
(-187, 1, '-', 0, '+3167', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res0, res1, res2, res3)')
(-231, 1, '-', 0, '+3173', 'VSHF_B2_SB(src6, src6, src6, src7, mask0, mask3, vec6, vec9)')
(-339, 1, '-', 0, '+3187', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-113, 1, '-', 0, '+3156', 'src += stride')
(-97, 1, '-', 0, '+3152', 'src += stride')
(-380, 1, '-', 0, '+3194', 'dst3 = __msa_aver_s_b(dst3, src6)')
(-72, 1, '-', 0, '+3146', 'mask4 = mask1 + 8')
(-697, 1, '-', 0, '+3239', 'SLDI_B2_SB(src6, src7, src6, src7, src6, src7, 2)')
(-540, 1, '-', 0, '+3219', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res0, res1, res2, res3)')
(-584, 1, '-', 0, '+3225', 'VSHF_B2_SB(src4, src4, src5, src5, mask0, mask0, vec0, vec1)')
(-681, 1, '-', 0, '+3237', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 2)')
(-750, 1, '-', 0, '+3247', 'PCKEV_B2_SB(res5, res4, res7, res6, tmp2, tmp3)')
(-777, 1, '-', 0, '+3252', 'XORI_B4_128_SB(tmp0, tmp1, tmp2, tmp3)')
(-415, 0, 'D', 2, '3202', 'ptrdiff_t stride')
(-705, 1, '-', 0, '+3240', 'PCKEV_D2_SB(src1, src0, src3, src2, src0, src1)')
(-464, 1, '-', 0, '+3211', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-651, 1, '-', 0, '+3233', 'VSHF_B2_SB(src6, src6, src7, src7, mask2, mask2, vec10, vec11)')
(-660, 1, '-', 0, '+3234', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res4, res5, res6, res7)')
(-731, 1, '-', 0, '+3244', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-495, 1, '-', 0, '+3214', 'VSHF_B2_SB(src0, src0, src1, src1, mask0, mask0, vec0, vec1)')
(-757, 1, '-', 0, '+3248', 'tmp0 = __msa_aver_s_b(tmp0, src0)')
(-611, 1, '-', 0, '+3228', 'VSHF_B2_SB(src4, src4, src5, src5, mask1, mask1, vec4, vec5)')
(-531, 1, '-', 0, '+3218', 'VSHF_B2_SB(src2, src2, src3, src3, mask1, mask1, vec6, vec7)')
(-593, 1, '-', 0, '+3226', 'VSHF_B2_SB(src6, src6, src7, src7, mask0, mask0, vec2, vec3)')
(-486, 1, '-', 0, '+3213', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-689, 1, '-', 0, '+3238', 'SLDI_B2_SB(src4, src5, src4, src5, src4, src5, 2)')
(-454, 1, '-', 0, '+3208', 'minus5b = __msa_ldi_b(-5)')
(-562, 1, '-', 0, '+3222', 'VSHF_B2_SB(src2, src2, src3, src3, mask2, mask2, vec10, vec11)')
(-737, 1, '-', 0, '+3245', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-782, 1, '-', 0, '+3253', 'ST8x8_UB(tmp0, tmp1, tmp2, tmp3, dst, stride)')
(-504, 1, '-', 0, '+3215', 'VSHF_B2_SB(src2, src2, src3, src3, mask0, mask0, vec2, vec3)')
(-460, 1, '-', 0, '+3209', 'plus20b = __msa_ldi_b(20)')
(-602, 1, '-', 0, '+3227', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res4, res5, res6, res7)')
(-629, 1, '-', 0, '+3230', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res4, res5, res6, res7)')
(-743, 1, '-', 0, '+3246', 'PCKEV_B2_SB(res1, res0, res3, res2, tmp0, tmp1)')
(-762, 1, '-', 0, '+3249', 'tmp1 = __msa_aver_s_b(tmp1, src1)')
(-712, 1, '-', 0, '+3241', 'PCKEV_D2_SB(src5, src4, src7, src6, src4, src5)')
(-522, 1, '-', 0, '+3217', 'VSHF_B2_SB(src0, src0, src1, src1, mask1, mask1, vec4, vec5)')
(-473, 1, '-', 0, '+3212', 'LD_SB8(src - 2, stride, src0, src1, src2, src3, src4, src5, src6, src7)')
(-719, 1, '-', 0, '+3242', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-725, 1, '-', 0, '+3243', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-789, -1, '-', 0, '-3204', 'avc_luma_hz_qrt_8w_msa(src - 2, stride, dst, stride, 8, 0)')
(-553, 1, '-', 0, '+3221', 'VSHF_B2_SB(src0, src0, src1, src1, mask2, mask2, vec8, vec9)')
(-767, 1, '-', 0, '+3250', 'tmp2 = __msa_aver_s_b(tmp2, src4)')
(-673, 1, '-', 0, '+3236', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 2)')
(-772, 1, '-', 0, '+3251', 'tmp3 = __msa_aver_s_b(tmp3, src5)')
(-620, 1, '-', 0, '+3229', 'VSHF_B2_SB(src6, src6, src7, src7, mask1, mask1, vec6, vec7)')
(-513, 1, '-', 0, '+3216', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res0, res1, res2, res3)')
(-642, 1, '-', 0, '+3232', 'VSHF_B2_SB(src4, src4, src5, src5, mask2, mask2, vec8, vec9)')
(-571, 1, '-', 0, '+3223', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res0, res1, res2, res3)')
(-940, 1, '-', 0, '+3276', 'VSHF_B2_SB(src0, src0, src1, src1, mask2, mask2, vec8, vec9)')
(-1118, 1, '-', 0, '+3299', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-1130, 1, '-', 0, '+3301', 'PCKEV_B2_SB(res1, res0, res3, res2, tmp0, tmp1)')
(-802, 0, 'D', 2, '3257', 'ptrdiff_t stride')
(-989, 1, '-', 0, '+3282', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res4, res5, res6, res7)')
(-1164, 1, '-', 0, '+3307', 'XORI_B4_128_SB(tmp0, tmp1, tmp2, tmp3)')
(-1159, 1, '-', 0, '+3306', 'tmp3 = __msa_aver_s_b(tmp3, src5)')
(-1038, 1, '-', 0, '+3288', 'VSHF_B2_SB(src6, src6, src7, src7, mask2, mask2, vec10, vec11)')
(-851, 1, '-', 0, '+3266', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-949, 1, '-', 0, '+3277', 'VSHF_B2_SB(src2, src2, src3, src3, mask2, mask2, vec10, vec11)')
(-1154, 1, '-', 0, '+3305', 'tmp2 = __msa_aver_s_b(tmp2, src4)')
(-900, 1, '-', 0, '+3271', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res0, res1, res2, res3)')
(-1106, 1, '-', 0, '+3297', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-909, 1, '-', 0, '+3272', 'VSHF_B2_SB(src0, src0, src1, src1, mask1, mask1, vec4, vec5)')
(-980, 1, '-', 0, '+3281', 'VSHF_B2_SB(src6, src6, src7, src7, mask0, mask0, vec2, vec3)')
(-1047, 1, '-', 0, '+3289', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res4, res5, res6, res7)')
(-1029, 1, '-', 0, '+3287', 'VSHF_B2_SB(src4, src4, src5, src5, mask2, mask2, vec8, vec9)')
(-1124, 1, '-', 0, '+3300', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-873, 1, '-', 0, '+3268', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-1016, 1, '-', 0, '+3285', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res4, res5, res6, res7)')
(-841, 1, '-', 0, '+3263', 'minus5b = __msa_ldi_b(-5)')
(-882, 1, '-', 0, '+3269', 'VSHF_B2_SB(src0, src0, src1, src1, mask0, mask0, vec0, vec1)')
(-1112, 1, '-', 0, '+3298', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-1144, 1, '-', 0, '+3303', 'tmp0 = __msa_aver_s_b(tmp0, src0)')
(-998, 1, '-', 0, '+3283', 'VSHF_B2_SB(src4, src4, src5, src5, mask1, mask1, vec4, vec5)')
(-1092, 1, '-', 0, '+3295', 'PCKEV_D2_SB(src1, src0, src3, src2, src0, src1)')
(-918, 1, '-', 0, '+3273', 'VSHF_B2_SB(src2, src2, src3, src3, mask1, mask1, vec6, vec7)')
(-1068, 1, '-', 0, '+3292', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 3)')
(-958, 1, '-', 0, '+3278', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res0, res1, res2, res3)')
(-971, 1, '-', 0, '+3280', 'VSHF_B2_SB(src4, src4, src5, src5, mask0, mask0, vec0, vec1)')
(-1149, 1, '-', 0, '+3304', 'tmp1 = __msa_aver_s_b(tmp1, src1)')
(-860, 1, '-', 0, '+3267', 'LD_SB8(src - 2, stride, src0, src1, src2, src3, src4, src5, src6, src7)')
(-1137, 1, '-', 0, '+3302', 'PCKEV_B2_SB(res5, res4, res7, res6, tmp2, tmp3)')
(-847, 1, '-', 0, '+3264', 'plus20b = __msa_ldi_b(20)')
(-1169, 1, '-', 0, '+3308', 'ST8x8_UB(tmp0, tmp1, tmp2, tmp3, dst, stride)')
(-927, 1, '-', 0, '+3274', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res0, res1, res2, res3)')
(-1007, 1, '-', 0, '+3284', 'VSHF_B2_SB(src6, src6, src7, src7, mask1, mask1, vec6, vec7)')
(-891, 1, '-', 0, '+3270', 'VSHF_B2_SB(src2, src2, src3, src3, mask0, mask0, vec2, vec3)')
(-1084, 1, '-', 0, '+3294', 'SLDI_B2_SB(src6, src7, src6, src7, src6, src7, 3)')
(-1076, 1, '-', 0, '+3293', 'SLDI_B2_SB(src4, src5, src4, src5, src4, src5, 3)')
(-1060, 1, '-', 0, '+3291', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 3)')
(-1176, -1, '-', 0, '-3259', 'avc_luma_hz_qrt_8w_msa(src - 2, stride, dst, stride, 8, 1)')
(-1099, 1, '-', 0, '+3296', 'PCKEV_D2_SB(src5, src4, src7, src6, src4, src5)')
(-1256, 1, '-', 0, '+3078', 'mask4 = mask1 + 8')
(-1503, 1, '-', 0, '+3116', 'SLDI_B2_SB(src5, src7, src4, src6, src4, src6, 2)')
(-1569, 1, '-', 0, '+3127', 'XORI_B4_128_SB(dst0, dst1, dst2, dst3)')
(-1511, 1, '-', 0, '+3117', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-1371, 1, '-', 0, '+3099', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res0, res1, res2, res3)')
(-1549, 1, '-', 0, '+3123', 'dst0 = __msa_aver_s_b(dst0, src0)')
(-1276, 1, '-', 0, '+3083', 'LD_SB2(src, 16, src0, src1)')
(-1189, 0, 'D', 2, '3066', 'ptrdiff_t stride')
(-1292, 1, '-', 0, '+3087', 'LD_SB2(src, 16, src4, src5)')
(-1308, 1, '-', 0, '+3092', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-1451, 1, '-', 0, '+3109', 'VSHF_B2_SB(src6, src6, src6, src7, mask2, mask5, vec8, vec11)')
(-1305, 1, '-', 0, '+3090', 'src += stride')
(-1242, 1, '-', 0, '+3076', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-1554, 1, '-', 0, '+3124', 'dst1 = __msa_aver_s_b(dst1, src2)')
(-1469, 1, '-', 0, '+3111', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res4, res5, res6, res7)')
(-1326, 1, '-', 0, '+3094', 'VSHF_B2_SB(src2, src2, src2, src3, mask0, mask3, vec6, vec9)')
(-1535, 1, '-', 0, '+3121', 'PCKEV_B2_SB(res1, res0, res3, res2, dst0, dst1)')
(-1266, 1, '-', 0, '+3080', 'src -= 2')
(-1251, 1, '-', 0, '+3077', 'mask3 = mask0 + 8')
(-1261, 1, '-', 0, '+3079', 'mask5 = mask2 + 8')
(-1406, 1, '-', 0, '+3104', 'VSHF_B2_SB(src4, src4, src4, src5, mask0, mask3, vec0, vec3)')
(-1353, 1, '-', 0, '+3097', 'VSHF_B2_SB(src0, src0, src0, src1, mask2, mask5, vec2, vec5)')
(-1238, 1, '-', 0, '+3074', 'plus20b = __msa_ldi_b(20)')
(-1362, 1, '-', 0, '+3098', 'VSHF_B2_SB(src2, src2, src2, src3, mask2, mask5, vec8, vec11)')
(-1586, -1, '-', 0, '-3068', 'avc_luma_hz_qrt_16w_msa(src - 2, stride, dst, stride, 16, 0)')
(-1289, 1, '-', 0, '+3086', 'src += stride')
(-1433, 1, '-', 0, '+3107', 'VSHF_B2_SB(src6, src6, src6, src7, mask1, mask4, vec7, vec10)')
(-1581, 1, '-', 0, '+3129', 'dst += (4 * stride)')
(-1424, 1, '-', 0, '+3106', 'VSHF_B2_SB(src4, src4, src4, src5, mask1, mask4, vec1, vec4)')
(-1232, 1, '-', 0, '+3073', 'minus5b = __msa_ldi_b(-5)')
(-1482, 1, '-', 0, '+3113', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res4, res5, res6, res7)')
(-1269, 1, '-', 0, '+3082', 'for (loop_cnt = 4; loop_cnt--;)')
(-1523, 1, '-', 0, '+3119', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-1335, 1, '-', 0, '+3095', 'VSHF_B2_SB(src0, src0, src0, src1, mask1, mask4, vec1, vec4)')
(-1564, 1, '-', 0, '+3126', 'dst3 = __msa_aver_s_b(dst3, src6)')
(-1542, 1, '-', 0, '+3122', 'PCKEV_B2_SB(res5, res4, res7, res6, dst2, dst3)')
(-1284, 1, '-', 0, '+3085', 'LD_SB2(src, 16, src2, src3)')
(-1380, 1, '-', 0, '+3100', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res0, res1, res2, res3)')
(-1559, 1, '-', 0, '+3125', 'dst2 = __msa_aver_s_b(dst2, src4)')
(-1415, 1, '-', 0, '+3105', 'VSHF_B2_SB(src6, src6, src6, src7, mask0, mask3, vec6, vec9)')
(-1300, 1, '-', 0, '+3089', 'LD_SB2(src, 16, src6, src7)')
(-1344, 1, '-', 0, '+3096', 'VSHF_B2_SB(src2, src2, src2, src3, mask1, mask4, vec7, vec10)')
(-1393, 1, '-', 0, '+3102', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res0, res1, res2, res3)')
(-1297, 1, '-', 0, '+3088', 'src += stride')
(-1317, 1, '-', 0, '+3093', 'VSHF_B2_SB(src0, src0, src0, src1, mask0, mask3, vec0, vec3)')
(-1442, 1, '-', 0, '+3108', 'VSHF_B2_SB(src4, src4, src4, src5, mask2, mask5, vec2, vec5)')
(-1495, 1, '-', 0, '+3115', 'SLDI_B2_SB(src1, src3, src0, src2, src0, src2, 2)')
(-1517, 1, '-', 0, '+3118', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-1574, 1, '-', 0, '+3128', 'ST_SB4(dst0, dst1, dst2, dst3, dst, stride)')
(-1529, 1, '-', 0, '+3120', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-1460, 1, '-', 0, '+3110', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res4, res5, res6, res7)')
(-1281, 1, '-', 0, '+3084', 'src += stride')
(-1743, 1, '-', 0, '+3366', 'src1 = (v16i8) __msa_insve_w((v4i32) src2, 1, (v4i32) src3)')
(-1767, 1, '-', 0, '+3368', 'res = __msa_aver_s_b(res, src0)')
(-1619, 1, '-', 0, '+3348', 'minus5b = __msa_ldi_b(-5)')
(-1706, 1, '-', 0, '+3362', 'res = __msa_pckev_b((v16i8) res1, (v16i8) res0)')
(-1731, 1, '-', 0, '+3365', 'src0 = (v16i8) __msa_insve_w((v4i32) src0, 1, (v4i32) src1)')
(-1599, 0, 'D', 2, '3343', 'ptrdiff_t stride')
(-1661, 1, '-', 0, '+3355', 'HADD_SB2_SH(vec0, vec1, res0, res1)')
(-1629, 1, '-', 0, '+3351', 'LD_SB3(&luma_mask_arr[48], 16, mask0, mask1, mask2)')
(-1691, 1, '-', 0, '+3359', 'DPADD_SB2_SH(vec4, vec5, plus20b, plus20b, res0, res1)')
(-1666, 1, '-', 0, '+3356', 'VSHF_B2_SB(src0, src1, src2, src3, mask1, mask1, vec2, vec3)')
(-1772, 1, '-', 0, '+3369', 'res = (v16i8) __msa_xori_b((v16u8) res, 128)')
(-1647, 1, '-', 0, '+3353', 'XORI_B4_128_SB(src0, src1, src2, src3)')
(-1638, 1, '-', 0, '+3352', 'LD_SB4(src - 2, stride, src0, src1, src2, src3)')
(-1675, 1, '-', 0, '+3357', 'DPADD_SB2_SH(vec2, vec3, minus5b, minus5b, res0, res1)')
(-1715, 1, '-', 0, '+3363', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 3)')
(-1625, 1, '-', 0, '+3349', 'plus20b = __msa_ldi_b(20)')
(-1702, 1, '-', 0, '+3361', 'SAT_SH2_SH(res0, res1, 7)')
(-1790, -1, '-', 0, '-3345', 'avc_luma_hz_qrt_4w_msa(src - 2, stride, dst, stride, 4, 1)')
(-1723, 1, '-', 0, '+3364', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 3)')
(-1781, 1, '-', 0, '+3370', 'ST4x4_UB(res, res, 0, 1, 2, 3, dst, stride)')
(-1682, 1, '-', 0, '+3358', 'VSHF_B2_SB(src0, src1, src2, src3, mask2, mask2, vec4, vec5)')
(-1652, 1, '-', 0, '+3354', 'VSHF_B2_SB(src0, src1, src2, src3, mask0, mask0, vec0, vec1)')
(-1755, 1, '-', 0, '+3367', 'src0 = (v16i8) __msa_insve_d((v2i64) src0, 1, (v2i64) src1)')
(-1698, 1, '-', 0, '+3360', 'SRARI_H2_SH(res0, res1, 5)')
(-1971, 1, '-', 0, '+3337', 'res = __msa_aver_s_b(res, src0)')
(-1829, 1, '-', 0, '+3318', 'plus20b = __msa_ldi_b(20)')
(-1906, 1, '-', 0, '+3330', 'SAT_SH2_SH(res0, res1, 7)')
(-1910, 1, '-', 0, '+3331', 'res = __msa_pckev_b((v16i8) res1, (v16i8) res0)')
(-1935, 1, '-', 0, '+3334', 'src0 = (v16i8) __msa_insve_w((v4i32) src0, 1, (v4i32) src1)')
(-1803, 0, 'D', 2, '3312', 'ptrdiff_t stride')
(-1842, 1, '-', 0, '+3321', 'LD_SB4(src - 2, stride, src0, src1, src2, src3)')
(-1985, 1, '-', 0, '+3339', 'ST4x4_UB(res, res, 0, 1, 2, 3, dst, stride)')
(-1994, -1, '-', 0, '-3314', 'avc_luma_hz_qrt_4w_msa(src - 2, stride, dst, stride, 4, 0)')
(-1823, 1, '-', 0, '+3317', 'minus5b = __msa_ldi_b(-5)')
(-1902, 1, '-', 0, '+3329', 'SRARI_H2_SH(res0, res1, 5)')
(-1851, 1, '-', 0, '+3322', 'XORI_B4_128_SB(src0, src1, src2, src3)')
(-1919, 1, '-', 0, '+3332', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 2)')
(-1833, 1, '-', 0, '+3320', 'LD_SB3(&luma_mask_arr[48], 16, mask0, mask1, mask2)')
(-1947, 1, '-', 0, '+3335', 'src1 = (v16i8) __msa_insve_w((v4i32) src2, 1, (v4i32) src3)')
(-1895, 1, '-', 0, '+3328', 'DPADD_SB2_SH(vec4, vec5, plus20b, plus20b, res0, res1)')
(-1976, 1, '-', 0, '+3338', 'res = (v16i8) __msa_xori_b((v16u8) res, 128)')
(-1927, 1, '-', 0, '+3333', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 2)')
(-1886, 1, '-', 0, '+3327', 'VSHF_B2_SB(src0, src1, src2, src3, mask2, mask2, vec4, vec5)')
(-1856, 1, '-', 0, '+3323', 'VSHF_B2_SB(src0, src1, src2, src3, mask0, mask0, vec0, vec1)')
(-1865, 1, '-', 0, '+3324', 'HADD_SB2_SH(vec0, vec1, res0, res1)')
(-1959, 1, '-', 0, '+3336', 'src0 = (v16i8) __msa_insve_d((v2i64) src0, 1, (v2i64) src1)')
(-1870, 1, '-', 0, '+3325', 'VSHF_B2_SB(src0, src1, src2, src3, mask1, mask1, vec2, vec3)')
(-1879, 1, '-', 0, '+3326', 'DPADD_SB2_SH(vec2, vec3, minus5b, minus5b, res0, res1)')
---------------------------
(-5, -402, 'DDGstride', -1)
(-415, -789, 'DDGstride', -1)
(-802, -1176, 'DDGstride', -1)
(-1189, -1586, 'DDGstride', -1)
(-1599, -1790, 'DDGstride', -1)
(-1803, -1994, 'DDGstride', -1)
===========================
(-402, -1, '-', 0, '-3136', 'avc_luma_hz_qrt_16w_msa(src - 2, stride, dst, stride, 16, 1)')
(-5, 0, 'D', 2, '3134', 'ptrdiff_t stride')
(-415, 0, 'D', 2, '3202', 'ptrdiff_t stride')
(-789, -1, '-', 0, '-3204', 'avc_luma_hz_qrt_8w_msa(src - 2, stride, dst, stride, 8, 0)')
(-802, 0, 'D', 2, '3257', 'ptrdiff_t stride')
(-1176, -1, '-', 0, '-3259', 'avc_luma_hz_qrt_8w_msa(src - 2, stride, dst, stride, 8, 1)')
(-1189, 0, 'D', 2, '3066', 'ptrdiff_t stride')
(-1586, -1, '-', 0, '-3068', 'avc_luma_hz_qrt_16w_msa(src - 2, stride, dst, stride, 16, 0)')
(-1599, 0, 'D', 2, '3343', 'ptrdiff_t stride')
(-1790, -1, '-', 0, '-3345', 'avc_luma_hz_qrt_4w_msa(src - 2, stride, dst, stride, 4, 1)')
(-1803, 0, 'D', 2, '3312', 'ptrdiff_t stride')
(-1994, -1, '-', 0, '-3314', 'avc_luma_hz_qrt_4w_msa(src - 2, stride, dst, stride, 4, 0)')
---------------------------
(-160, -196, 'DDGvec10', 1)
(-187, -196, 'DDGres0', 1)
(-231, -276, 'DDGvec9', 1)
(-319, -375, 'DDGsrc4', 1)
(-276, -285, 'DDGres5', 1)
(-54, -209, 'DDGplus20b', 1)
(-351, -187, 'DDGres3', 1)
(-92, -124, 'DDGsrc0', 1)
(-385, -390, 'DDGdst2', 1)
(-85, -97, 'CDG', 1)
(-100, -105, 'DDGsrc', 1)
(-240, -285, 'DDGvec4', 1)
(-5, -121, 'DDGstride', 1)
(-85, -397, 'CDG', 1)
(-397, -121, 'DDGstride', 1)
(-160, -178, 'DDGsrc3', 1)
(-298, -333, 'DDGres7', 1)
(-209, -267, 'DDGvec11', 1)
(-85, -351, 'CDG', 1)
(-339, -351, 'DDGres0', 1)
(-285, -151, 'DDGvec1', 1)
(-385, -390, 'DDGdst3', 1)
(-327, -339, 'DDGres0', 1)
(-311, -365, 'DDGsrc0', 1)
(-285, -298, 'DDGres6', 1)
(-58, -151, 'DDGmask1', 1)
(-267, -169, 'DDGmask2', 1)
(-249, -151, 'DDGmask1', 1)
(-258, -267, 'DDGmask2', 1)
(-85, -133, 'CDG', 1)
(-108, -113, 'DDGsrc', 1)
(-258, -319, 'DDGsrc5', 1)
(-358, -276, 'DDGres6', 1)
(-108, -124, 'DDGsrc5', 1)
(-276, -285, 'DDGres4', 1)
(-267, -319, 'DDGsrc6', 1)
(-196, -209, 'DDGres3', 1)
(-209, -258, 'DDGvec2', 1)
(-231, -249, 'DDGsrc7', 1)
(-267, -169, 'DDGmask5', 1)
(-375, -108, 'DDGsrc4', 1)
(-169, -209, 'DDGvec2', 1)
(-222, -231, 'DDGmask0', 1)
(-133, -187, 'DDGvec3', 1)
(-5, -105, 'DDGstride', 1)
(-178, -311, 'DDGsrc2', 1)
(-85, -249, 'CDG', 1)
(-85, -358, 'CDG', 1)
(-92, -97, 'DDGsrc', 1)
(-85, -327, 'CDG', 1)
(-351, -370, 'DDGdst1', 1)
(-85, -345, 'CDG', 1)
(-240, -249, 'DDGmask4', 1)
(-169, -311, 'DDGsrc1', 1)
(-72, -151, 'DDGmask4', 1)
(-390, -397, 'DDGstride', 1)
(-85, -258, 'CDG', 1)
(-249, -267, 'DDGsrc6', 1)
(-85, -124, 'CDG', 1)
(-319, -380, 'DDGsrc6', 1)
(-209, -327, 'DDGres1', 1)
(-133, -187, 'DDGvec0', 1)
(-249, -151, 'DDGmask4', 1)
(-370, -100, 'DDGsrc2', 1)
(-85, -121, 'CDG', 1)
(-85, -222, 'CDG', 1)
(-390, -351, 'DDGdst0', 1)
(-351, -187, 'DDGres2', 1)
(-298, -178, 'DDGvec8', 1)
(-196, -209, 'DDGres1', 1)
(-249, -285, 'DDGvec7', 1)
(-209, -327, 'DDGres0', 1)
(-285, -298, 'DDGres7', 1)
(-178, -258, 'DDGmask5', 1)
(-385, -390, 'DDGdst1', 1)
(-85, -375, 'CDG', 1)
(-358, -276, 'DDGres7', 1)
(-85, -385, 'CDG', 1)
(-196, -209, 'DDGres0', 1)
(-240, -249, 'DDGmask1', 1)
(-196, -240, 'DDGvec4', 1)
(-178, -311, 'DDGsrc3', 1)
(-258, -319, 'DDGsrc4', 1)
(-85, -311, 'CDG', 1)
(-85, -113, 'CDG', 1)
(-113, -116, 'DDGsrc', 1)
(-345, -358, 'DDGres7', 1)
(-151, -160, 'DDGmask4', 1)
(-187, -196, 'DDGres3', 1)
(-85, -298, 'CDG', 1)
(-85, -339, 'CDG', 1)
(-258, -298, 'DDGvec2', 1)
(-116, -124, 'DDGsrc7', 1)
(-85, -151, 'CDG', 1)
(-151, -196, 'DDGvec1', 1)
(-390, -358, 'DDGdst3', 1)
(-298, -169, 'DDGvec5', 1)
(-298, -333, 'DDGres5', 1)
(-92, -124, 'DDGsrc1', 1)
(-298, -333, 'DDGres6', 1)
(-358, -375, 'DDGdst2', 1)
(-124, -142, 'DDGsrc3', 1)
(-240, -258, 'DDGsrc5', 1)
(-222, -276, 'DDGvec3', 1)
(-85, -105, 'CDG', 1)
(-267, -298, 'DDGvec11', 1)
(-160, -196, 'DDGvec7', 1)
(-85, -92, 'CDG', 1)
(-5, -113, 'DDGstride', 1)
(-97, -100, 'DDGsrc', 1)
(-108, -124, 'DDGsrc4', 1)
(-85, -240, 'CDG', 1)
(-85, -267, 'CDG', 1)
(-178, -209, 'DDGvec8', 1)
(-48, -196, 'DDGminus5b', 1)
(-327, -339, 'DDGres3', 1)
(-151, -160, 'DDGmask1', 1)
(-196, -285, 'DDGminus5b', 1)
(-333, -345, 'DDGres4', 1)
(-365, -92, 'DDGsrc0', 1)
(-380, -116, 'DDGsrc6', 1)
(-142, -222, 'DDGmask3', 1)
(-231, -276, 'DDGvec6', 1)
(-85, -231, 'CDG', 1)
(-351, -365, 'DDGdst0', 1)
(-85, -333, 'CDG', 1)
(-58, -133, 'DDGmask0', 1)
(-142, -222, 'DDGmask0', 1)
(-151, -169, 'DDGsrc0', 1)
(-67, -133, 'DDGmask3', 1)
(-58, -72, 'DDGmask1', 1)
(-390, -358, 'DDGdst2', 1)
(-209, -267, 'DDGvec8', 1)
(-258, -267, 'DDGmask5', 1)
(-85, -365, 'CDG', 1)
(-375, -385, 'DDGdst2', 1)
(-105, -108, 'DDGsrc', 1)
(-187, -231, 'DDGvec9', 1)
(-124, -142, 'DDGsrc2', 1)
(-298, -333, 'DDGres4', 1)
(-124, -222, 'DDGsrc4', 1)
(-333, -345, 'DDGres5', 1)
(-333, -345, 'DDGres7', 1)
(-124, -231, 'DDGsrc7', 1)
(-285, -160, 'DDGvec7', 1)
(-85, -187, 'CDG', 1)
(-85, -160, 'CDG', 1)
(-151, -196, 'DDGvec4', 1)
(-77, -169, 'DDGmask5', 1)
(-187, -222, 'DDGvec3', 1)
(-196, -249, 'DDGvec10', 1)
(-85, -178, 'CDG', 1)
(-276, -285, 'DDGres6', 1)
(-196, -240, 'DDGvec1', 1)
(-285, -298, 'DDGres5', 1)
(-240, -285, 'DDGvec1', 1)
(-209, -327, 'DDGres3', 1)
(-231, -249, 'DDGsrc6', 1)
(-85, -276, 'CDG', 1)
(-209, -258, 'DDGvec5', 1)
(-276, -142, 'DDGvec9', 1)
(-358, -380, 'DDGdst3', 1)
(-58, -169, 'DDGmask2', 1)
(-187, -196, 'DDGres2', 1)
(-124, -222, 'DDGsrc5', 1)
(-397, -390, 'DDGdst', 1)
(-169, -209, 'DDGvec5', 1)
(-85, -116, 'CDG', 1)
(-311, -370, 'DDGsrc2', 1)
(-124, -133, 'DDGsrc0', 1)
(-298, -209, 'DDGplus20b', 1)
(-240, -258, 'DDGsrc4', 1)
(-285, -151, 'DDGvec4', 1)
(-311, -92, 'DDGsrc1', 1)
(-169, -178, 'DDGmask2', 1)
(-142, -160, 'DDGsrc2', 1)
(-351, -187, 'DDGres1', 1)
(-339, -351, 'DDGres2', 1)
(-82, -92, 'DDGsrc', 1)
(-327, -339, 'DDGres2', 1)
(-85, -370, 'CDG', 1)
(-187, -231, 'DDGvec6', 1)
(-222, -276, 'DDGvec0', 1)
(-339, -351, 'DDGres3', 1)
(-351, -187, 'DDGres0', 1)
(-85, -108, 'CDG', 1)
(-169, -178, 'DDGmask5', 1)
(-285, -196, 'DDGminus5b', 1)
(-231, -133, 'DDGmask3', 1)
(-142, -187, 'DDGvec6', 1)
(-285, -298, 'DDGres4', 1)
(-85, -196, 'CDG', 1)
(-160, -240, 'DDGmask4', 1)
(-267, -319, 'DDGsrc7', 1)
(-222, -240, 'DDGsrc5', 1)
(-358, -276, 'DDGres4', 1)
(-397, -113, 'DDGstride', 1)
(-276, -285, 'DDGres7', 1)
(-85, -100, 'CDG', 1)
(-345, -358, 'DDGres4', 1)
(-187, -196, 'DDGres1', 1)
(-85, -209, 'CDG', 1)
(-276, -142, 'DDGvec6', 1)
(-5, -390, 'DDGstride', 1)
(-58, -77, 'DDGmask2', 1)
(-397, -390, 'DDGstride', 1)
(-85, -285, 'CDG', 1)
(-100, -124, 'DDGsrc2', 1)
(-319, -116, 'DDGsrc7', 1)
(-178, -209, 'DDGvec11', 1)
(-258, -298, 'DDGvec5', 1)
(-116, -124, 'DDGsrc6', 1)
(-142, -160, 'DDGsrc3', 1)
(-133, -151, 'DDGsrc1', 1)
(-267, -298, 'DDGvec8', 1)
(-121, -92, 'DDGsrc', 1)
(-142, -187, 'DDGvec9', 1)
(-249, -267, 'DDGsrc7', 1)
(-339, -351, 'DDGres1', 1)
(-397, -105, 'DDGstride', 1)
(-327, -339, 'DDGres1', 1)
(-133, -142, 'DDGmask3', 1)
(-333, -345, 'DDGres6', 1)
(-58, -67, 'DDGmask0', 1)
(-151, -169, 'DDGsrc1', 1)
(-358, -276, 'DDGres5', 1)
(-160, -240, 'DDGmask1', 1)
(-319, -108, 'DDGsrc5', 1)
(-133, -142, 'DDGmask0', 1)
(-390, -397, 'DDGdst', 1)
(-345, -358, 'DDGres5', 1)
(-209, -327, 'DDGres2', 1)
(-209, -298, 'DDGplus20b', 1)
(-276, -133, 'DDGvec3', 1)
(-5, -97, 'DDGstride', 1)
(-397, -97, 'DDGstride', 1)
(-380, -385, 'DDGdst3', 1)
(-187, -222, 'DDGvec0', 1)
(-196, -209, 'DDGres2', 1)
(-370, -385, 'DDGdst1', 1)
(-298, -178, 'DDGvec11', 1)
(-285, -160, 'DDGvec10', 1)
(-365, -385, 'DDGdst0', 1)
(-345, -358, 'DDGres6', 1)
(-249, -285, 'DDGvec10', 1)
(-169, -311, 'DDGsrc0', 1)
(-385, -390, 'DDGdst0', 1)
(-133, -151, 'DDGsrc0', 1)
(-85, -142, 'CDG', 1)
(-100, -124, 'DDGsrc3', 1)
(-276, -133, 'DDGvec0', 1)
(-231, -133, 'DDGmask0', 1)
(-116, -121, 'DDGsrc', 1)
(-390, -351, 'DDGdst1', 1)
(-298, -169, 'DDGvec2', 1)
(-160, -178, 'DDGsrc2', 1)
(-196, -249, 'DDGvec7', 1)
(-311, -100, 'DDGsrc3', 1)
(-222, -231, 'DDGmask3', 1)
(-85, -380, 'CDG', 1)
(-85, -390, 'CDG', 1)
(-124, -231, 'DDGsrc6', 1)
(-124, -133, 'DDGsrc1', 1)
(-178, -258, 'DDGmask2', 1)
(-222, -240, 'DDGsrc4', 1)
(-85, -169, 'CDG', 1)
(-85, -319, 'CDG', 1)
(-777, -782, 'DDGtmp0', 1)
(-620, -629, 'DDGvec6', 1)
(-777, -782, 'DDGtmp1', 1)
(-531, -562, 'DDGsrc2', 1)
(-629, -660, 'DDGres6', 1)
(-689, -712, 'DDGsrc5', 1)
(-486, -495, 'DDGsrc1', 1)
(-719, -731, 'DDGres1', 1)
(-571, -719, 'DDGres1', 1)
(-454, -540, 'DDGminus5b', 1)
(-660, -725, 'DDGres4', 1)
(-593, -620, 'DDGsrc6', 1)
(-495, -513, 'DDGvec0', 1)
(-673, -705, 'DDGsrc1', 1)
(-611, -620, 'DDGmask1', 1)
(-571, -719, 'DDGres0', 1)
(-705, -762, 'DDGsrc1', 1)
(-562, -571, 'DDGvec11', 1)
(-651, -660, 'DDGvec11', 1)
(-705, -757, 'DDGsrc0', 1)
(-584, -602, 'DDGvec1', 1)
(-531, -540, 'DDGvec6', 1)
(-651, -697, 'DDGsrc6', 1)
(-620, -651, 'DDGsrc7', 1)
(-571, -651, 'DDGvec11', 1)
(-602, -629, 'DDGres7', 1)
(-660, -725, 'DDGres5', 1)
(-750, -772, 'DDGtmp3', 1)
(-540, -629, 'DDGminus5b', 1)
(-473, -486, 'DDGsrc2', 1)
(-522, -531, 'DDGmask1', 1)
(-495, -522, 'DDGsrc0', 1)
(-486, -593, 'DDGsrc7', 1)
(-540, -571, 'DDGres0', 1)
(-504, -513, 'DDGvec3', 1)
(-562, -681, 'DDGsrc2', 1)
(-762, -777, 'DDGtmp1', 1)
(-522, -553, 'DDGsrc1', 1)
(-642, -689, 'DDGsrc4', 1)
(-464, -522, 'DDGmask1', 1)
(-731, -743, 'DDGres1', 1)
(-584, -611, 'DDGsrc5', 1)
(-712, -767, 'DDGsrc4', 1)
(-772, -777, 'DDGtmp3', 1)
(-689, -712, 'DDGsrc4', 1)
(-486, -584, 'DDGsrc5', 1)
(-731, -743, 'DDGres0', 1)
(-719, -731, 'DDGres0', 1)
(-737, -750, 'DDGres7', 1)
(-473, -486, 'DDGsrc3', 1)
(-513, -593, 'DDGvec3', 1)
(-473, -486, 'DDGsrc0', 1)
(-562, -571, 'DDGvec10', 1)
(-651, -660, 'DDGvec10', 1)
(-531, -562, 'DDGsrc3', 1)
(-719, -731, 'DDGres3', 1)
(-562, -681, 'DDGsrc3', 1)
(-697, -712, 'DDGsrc6', 1)
(-473, -782, 'DDGstride', 1)
(-584, -593, 'DDGmask0', 1)
(-473, -486, 'DDGsrc5', 1)
(-642, -660, 'DDGvec9', 1)
(-571, -651, 'DDGvec10', 1)
(-611, -629, 'DDGvec4', 1)
(-611, -642, 'DDGsrc4', 1)
(-593, -602, 'DDGvec3', 1)
(-611, -629, 'DDGvec5', 1)
(-473, -486, 'DDGsrc7', 1)
(-660, -725, 'DDGres6', 1)
(-540, -620, 'DDGvec6', 1)
(-750, -767, 'DDGtmp2', 1)
(-513, -584, 'DDGvec0', 1)
(-737, -750, 'DDGres4', 1)
(-553, -571, 'DDGvec9', 1)
(-673, -705, 'DDGsrc0', 1)
(-495, -513, 'DDGvec1', 1)
(-584, -602, 'DDGvec0', 1)
(-629, -660, 'DDGres5', 1)
(-681, -705, 'DDGsrc2', 1)
(-629, -660, 'DDGres7', 1)
(-553, -673, 'DDGsrc0', 1)
(-464, -495, 'DDGmask0', 1)
(-725, -737, 'DDGres5', 1)
(-504, -513, 'DDGvec2', 1)
(-531, -611, 'DDGmask1', 1)
(-584, -611, 'DDGsrc4', 1)
(-540, -611, 'DDGvec4', 1)
(-697, -712, 'DDGsrc7', 1)
(-620, -651, 'DDGsrc6', 1)
(-540, -611, 'DDGvec5', 1)
(-522, -540, 'DDGvec4', 1)
(-495, -522, 'DDGsrc1', 1)
(-522, -540, 'DDGvec5', 1)
(-540, -571, 'DDGres2', 1)
(-540, -571, 'DDGres3', 1)
(-602, -629, 'DDGres4', 1)
(-473, -486, 'DDGsrc6', 1)
(-513, -540, 'DDGres2', 1)
(-642, -651, 'DDGmask2', 1)
(-681, -705, 'DDGsrc3', 1)
(-757, -777, 'DDGtmp0', 1)
(-513, -540, 'DDGres3', 1)
(-460, -571, 'DDGplus20b', 1)
(-731, -743, 'DDGres3', 1)
(-719, -731, 'DDGres2', 1)
(-602, -629, 'DDGres5', 1)
(-602, -629, 'DDGres6', 1)
(-486, -593, 'DDGsrc6', 1)
(-725, -737, 'DDGres4', 1)
(-767, -777, 'DDGtmp2', 1)
(-660, -725, 'DDGres7', 1)
(-629, -660, 'DDGres4', 1)
(-473, -486, 'DDGsrc4', 1)
(-712, -772, 'DDGsrc5', 1)
(-571, -642, 'DDGvec8', 1)
(-593, -602, 'DDGvec2', 1)
(-473, -486, 'DDGsrc1', 1)
(-464, -553, 'DDGmask2', 1)
(-593, -620, 'DDGsrc7', 1)
(-531, -540, 'DDGvec7', 1)
(-651, -697, 'DDGsrc7', 1)
(-486, -495, 'DDGsrc0', 1)
(-553, -562, 'DDGmask2', 1)
(-611, -642, 'DDGsrc5', 1)
(-504, -584, 'DDGmask0', 1)
(-486, -504, 'DDGsrc2', 1)
(-743, -762, 'DDGtmp1', 1)
(-513, -540, 'DDGres1', 1)
(-743, -757, 'DDGtmp0', 1)
(-513, -540, 'DDGres0', 1)
(-725, -737, 'DDGres6', 1)
(-495, -504, 'DDGmask0', 1)
(-540, -620, 'DDGvec7', 1)
(-504, -531, 'DDGsrc2', 1)
(-777, -782, 'DDGtmp3', 1)
(-571, -660, 'DDGplus20b', 1)
(-737, -750, 'DDGres5', 1)
(-737, -750, 'DDGres6', 1)
(-562, -642, 'DDGmask2', 1)
(-553, -673, 'DDGsrc1', 1)
(-513, -584, 'DDGvec1', 1)
(-513, -593, 'DDGvec2', 1)
(-415, -473, 'DDGstride', 1)
(-486, -504, 'DDGsrc3', 1)
(-620, -629, 'DDGvec7', 1)
(-731, -743, 'DDGres2', 1)
(-642, -660, 'DDGvec8', 1)
(-571, -642, 'DDGvec9', 1)
(-571, -719, 'DDGres2', 1)
(-777, -782, 'DDGtmp2', 1)
(-522, -553, 'DDGsrc0', 1)
(-571, -719, 'DDGres3', 1)
(-553, -571, 'DDGvec8', 1)
(-504, -531, 'DDGsrc3', 1)
(-725, -737, 'DDGres7', 1)
(-540, -571, 'DDGres1', 1)
(-486, -584, 'DDGsrc4', 1)
(-642, -689, 'DDGsrc5', 1)
(-927, -958, 'DDGres2', 1)
(-927, -958, 'DDGres3', 1)
(-949, -1029, 'DDGmask2', 1)
(-860, -873, 'DDGsrc6', 1)
(-900, -927, 'DDGres2', 1)
(-1029, -1038, 'DDGmask2', 1)
(-1038, -1084, 'DDGsrc6', 1)
(-900, -927, 'DDGres3', 1)
(-998, -1029, 'DDGsrc4', 1)
(-1047, -1112, 'DDGres5', 1)
(-873, -980, 'DDGsrc6', 1)
(-940, -949, 'DDGmask2', 1)
(-1154, -1164, 'DDGtmp2', 1)
(-909, -940, 'DDGsrc0', 1)
(-841, -927, 'DDGminus5b', 1)
(-1016, -1047, 'DDGres4', 1)
(-860, -873, 'DDGsrc4', 1)
(-860, -1169, 'DDGstride', 1)
(-1106, -1118, 'DDGres1', 1)
(-1029, -1047, 'DDGvec9', 1)
(-860, -873, 'DDGsrc1', 1)
(-958, -1038, 'DDGvec11', 1)
(-1164, -1169, 'DDGtmp3', 1)
(-1137, -1154, 'DDGtmp2', 1)
(-949, -1068, 'DDGsrc2', 1)
(-998, -1029, 'DDGsrc5', 1)
(-971, -989, 'DDGvec1', 1)
(-891, -900, 'DDGvec2', 1)
(-900, -927, 'DDGres1', 1)
(-989, -1016, 'DDGres5', 1)
(-1118, -1130, 'DDGres0', 1)
(-1007, -1038, 'DDGsrc6', 1)
(-882, -891, 'DDGmask0', 1)
(-927, -1007, 'DDGvec7', 1)
(-1124, -1137, 'DDGres5', 1)
(-1047, -1112, 'DDGres4', 1)
(-940, -1060, 'DDGsrc1', 1)
(-900, -971, 'DDGvec1', 1)
(-900, -980, 'DDGvec2', 1)
(-1144, -1164, 'DDGtmp0', 1)
(-949, -1068, 'DDGsrc3', 1)
(-851, -940, 'DDGmask2', 1)
(-1007, -1016, 'DDGvec7', 1)
(-918, -927, 'DDGvec6', 1)
(-971, -998, 'DDGsrc5', 1)
(-1164, -1169, 'DDGtmp0', 1)
(-1112, -1124, 'DDGres4', 1)
(-1029, -1047, 'DDGvec8', 1)
(-1047, -1112, 'DDGres6', 1)
(-989, -1016, 'DDGres4', 1)
(-860, -873, 'DDGsrc2', 1)
(-958, -1029, 'DDGvec8', 1)
(-882, -909, 'DDGsrc0', 1)
(-1099, -1159, 'DDGsrc5', 1)
(-1106, -1118, 'DDGres0', 1)
(-940, -958, 'DDGvec8', 1)
(-980, -1007, 'DDGsrc6', 1)
(-958, -1038, 'DDGvec10', 1)
(-1137, -1159, 'DDGtmp3', 1)
(-1112, -1124, 'DDGres5', 1)
(-873, -882, 'DDGsrc1', 1)
(-927, -958, 'DDGres1', 1)
(-1038, -1047, 'DDGvec11', 1)
(-1112, -1124, 'DDGres6', 1)
(-851, -882, 'DDGmask0', 1)
(-891, -971, 'DDGmask0', 1)
(-909, -940, 'DDGsrc1', 1)
(-847, -958, 'DDGplus20b', 1)
(-1124, -1137, 'DDGres4', 1)
(-1060, -1092, 'DDGsrc0', 1)
(-918, -998, 'DDGmask1', 1)
(-1029, -1076, 'DDGsrc5', 1)
(-1007, -1016, 'DDGvec6', 1)
(-1016, -1047, 'DDGres6', 1)
(-900, -927, 'DDGres0', 1)
(-989, -1016, 'DDGres6', 1)
(-1164, -1169, 'DDGtmp2', 1)
(-1124, -1137, 'DDGres6', 1)
(-909, -918, 'DDGmask1', 1)
(-882, -900, 'DDGvec0', 1)
(-998, -1007, 'DDGmask1', 1)
(-949, -958, 'DDGvec11', 1)
(-958, -1106, 'DDGres3', 1)
(-918, -949, 'DDGsrc2', 1)
(-1118, -1130, 'DDGres2', 1)
(-1118, -1130, 'DDGres3', 1)
(-851, -909, 'DDGmask1', 1)
(-971, -980, 'DDGmask0', 1)
(-860, -873, 'DDGsrc7', 1)
(-1076, -1099, 'DDGsrc4', 1)
(-1164, -1169, 'DDGtmp1', 1)
(-927, -1016, 'DDGminus5b', 1)
(-873, -891, 'DDGsrc2', 1)
(-1016, -1047, 'DDGres7', 1)
(-1076, -1099, 'DDGsrc5', 1)
(-802, -860, 'DDGstride', 1)
(-927, -958, 'DDGres0', 1)
(-989, -1016, 'DDGres7', 1)
(-891, -900, 'DDGvec3', 1)
(-1038, -1047, 'DDGvec10', 1)
(-918, -949, 'DDGsrc3', 1)
(-1029, -1076, 'DDGsrc4', 1)
(-958, -1047, 'DDGplus20b', 1)
(-873, -971, 'DDGsrc5', 1)
(-980, -989, 'DDGvec2', 1)
(-1130, -1144, 'DDGtmp0', 1)
(-873, -882, 'DDGsrc0', 1)
(-1124, -1137, 'DDGres7', 1)
(-873, -891, 'DDGsrc3', 1)
(-1092, -1144, 'DDGsrc0', 1)
(-860, -873, 'DDGsrc3', 1)
(-900, -980, 'DDGvec3', 1)
(-1060, -1092, 'DDGsrc1', 1)
(-1130, -1149, 'DDGtmp1', 1)
(-860, -873, 'DDGsrc0', 1)
(-971, -989, 'DDGvec0', 1)
(-971, -998, 'DDGsrc4', 1)
(-1068, -1092, 'DDGsrc2', 1)
(-1092, -1149, 'DDGsrc1', 1)
(-949, -958, 'DDGvec10', 1)
(-1047, -1112, 'DDGres7', 1)
(-1007, -1038, 'DDGsrc7', 1)
(-958, -1106, 'DDGres2', 1)
(-1084, -1099, 'DDGsrc7', 1)
(-940, -958, 'DDGvec9', 1)
(-860, -873, 'DDGsrc5', 1)
(-909, -927, 'DDGvec4', 1)
(-998, -1016, 'DDGvec4', 1)
(-909, -927, 'DDGvec5', 1)
(-998, -1016, 'DDGvec5', 1)
(-958, -1029, 'DDGvec9', 1)
(-918, -927, 'DDGvec7', 1)
(-1159, -1164, 'DDGtmp3', 1)
(-927, -1007, 'DDGvec6', 1)
(-891, -918, 'DDGsrc2', 1)
(-900, -971, 'DDGvec0', 1)
(-1038, -1084, 'DDGsrc7', 1)
(-882, -900, 'DDGvec1', 1)
(-1149, -1164, 'DDGtmp1', 1)
(-1112, -1124, 'DDGres7', 1)
(-873, -980, 'DDGsrc7', 1)
(-1016, -1047, 'DDGres5', 1)
(-940, -1060, 'DDGsrc0', 1)
(-1068, -1092, 'DDGsrc3', 1)
(-980, -989, 'DDGvec3', 1)
(-958, -1106, 'DDGres1', 1)
(-1106, -1118, 'DDGres2', 1)
(-927, -998, 'DDGvec4', 1)
(-980, -1007, 'DDGsrc7', 1)
(-873, -971, 'DDGsrc4', 1)
(-927, -998, 'DDGvec5', 1)
(-1099, -1154, 'DDGsrc4', 1)
(-891, -918, 'DDGsrc3', 1)
(-1118, -1130, 'DDGres1', 1)
(-1084, -1099, 'DDGsrc6', 1)
(-882, -909, 'DDGsrc1', 1)
(-1106, -1118, 'DDGres3', 1)
(-958, -1106, 'DDGres0', 1)
(-1269, -1460, 'CDG', 1)
(-1482, -1517, 'DDGres5', 1)
(-1482, -1517, 'DDGres6', 1)
(-1574, -1581, 'DDGstride', 1)
(-1574, -1535, 'DDGdst1', 1)
(-1251, -1317, 'DDGmask3', 1)
(-1380, -1469, 'DDGminus5b', 1)
(-1460, -1326, 'DDGvec6', 1)
(-1451, -1482, 'DDGvec11', 1)
(-1569, -1574, 'DDGdst3', 1)
(-1326, -1344, 'DDGsrc3', 1)
(-1308, -1317, 'DDGsrc0', 1)
(-1317, -1335, 'DDGsrc1', 1)
(-1189, -1297, 'DDGstride', 1)
(-1292, -1308, 'DDGsrc4', 1)
(-1269, -1549, 'CDG', 1)
(-1335, -1353, 'DDGsrc1', 1)
(-1362, -1495, 'DDGsrc3', 1)
(-1517, -1529, 'DDGres4', 1)
(-1335, -1344, 'DDGmask1', 1)
(-1317, -1326, 'DDGmask0', 1)
(-1284, -1289, 'DDGsrc', 1)
(-1344, -1424, 'DDGmask4', 1)
(-1529, -1542, 'DDGres7', 1)
(-1326, -1406, 'DDGmask3', 1)
(-1276, -1281, 'DDGsrc', 1)
(-1317, -1371, 'DDGvec0', 1)
(-1535, -1554, 'DDGdst1', 1)
(-1238, -1393, 'DDGplus20b', 1)
(-1308, -1326, 'DDGsrc3', 1)
(-1371, -1380, 'DDGres2', 1)
(-1442, -1482, 'DDGvec5', 1)
(-1362, -1393, 'DDGvec11', 1)
(-1300, -1308, 'DDGsrc6', 1)
(-1289, -1292, 'DDGsrc', 1)
(-1269, -1326, 'CDG', 1)
(-1371, -1415, 'DDGvec6', 1)
(-1451, -1353, 'DDGmask2', 1)
(-1442, -1451, 'DDGmask2', 1)
(-1569, -1574, 'DDGdst1', 1)
(-1495, -1554, 'DDGsrc2', 1)
(-1371, -1380, 'DDGres3', 1)
(-1269, -1344, 'CDG', 1)
(-1353, -1393, 'DDGvec2', 1)
(-1292, -1297, 'DDGsrc', 1)
(-1308, -1415, 'DDGsrc7', 1)
(-1406, -1460, 'DDGvec3', 1)
(-1523, -1535, 'DDGres2', 1)
(-1469, -1344, 'DDGvec7', 1)
(-1344, -1424, 'DDGmask1', 1)
(-1269, -1469, 'CDG', 1)
(-1564, -1300, 'DDGsrc6', 1)
(-1380, -1393, 'DDGres3', 1)
(-1581, -1305, 'DDGstride', 1)
(-1482, -1353, 'DDGvec5', 1)
(-1380, -1433, 'DDGvec10', 1)
(-1335, -1380, 'DDGvec1', 1)
(-1269, -1433, 'CDG', 1)
(-1542, -1460, 'DDGres5', 1)
(-1542, -1564, 'DDGdst3', 1)
(-1482, -1517, 'DDGres7', 1)
(-1542, -1559, 'DDGdst2', 1)
(-1297, -1300, 'DDGsrc', 1)
(-1269, -1362, 'CDG', 1)
(-1503, -1300, 'DDGsrc7', 1)
(-1406, -1460, 'DDGvec0', 1)
(-1424, -1433, 'DDGmask4', 1)
(-1371, -1415, 'DDGvec9', 1)
(-1353, -1495, 'DDGsrc0', 1)
(-1433, -1451, 'DDGsrc6', 1)
(-1535, -1371, 'DDGres3', 1)
(-1495, -1549, 'DDGsrc0', 1)
(-1353, -1362, 'DDGmask2', 1)
(-1469, -1335, 'DDGvec4', 1)
(-1266, -1276, 'DDGsrc', 1)
(-1523, -1535, 'DDGres0', 1)
(-1554, -1284, 'DDGsrc2', 1)
(-1242, -1261, 'DDGmask2', 1)
(-1261, -1353, 'DDGmask5', 1)
(-1300, -1305, 'DDGsrc', 1)
(-1511, -1523, 'DDGres2', 1)
(-1371, -1406, 'DDGvec3', 1)
(-1511, -1523, 'DDGres3', 1)
(-1529, -1542, 'DDGres5', 1)
(-1353, -1362, 'DDGmask5', 1)
(-1269, -1574, 'CDG', 1)
(-1276, -1308, 'DDGsrc0', 1)
(-1523, -1535, 'DDGres1', 1)
(-1393, -1451, 'DDGvec11', 1)
(-1424, -1433, 'DDGmask1', 1)
(-1269, -1353, 'CDG', 1)
(-1415, -1317, 'DDGmask3', 1)
(-1542, -1460, 'DDGres4', 1)
(-1433, -1469, 'DDGvec7', 1)
(-1344, -1380, 'DDGvec10', 1)
(-1482, -1393, 'DDGplus20b', 1)
(-1406, -1424, 'DDGsrc5', 1)
(-1362, -1442, 'DDGmask2', 1)
(-1308, -1317, 'DDGsrc1', 1)
(-1269, -1276, 'CDG', 1)
(-1326, -1406, 'DDGmask0', 1)
(-1269, -1317, 'CDG', 1)
(-1503, -1559, 'DDGsrc4', 1)
(-1517, -1529, 'DDGres7', 1)
(-1371, -1406, 'DDGvec0', 1)
(-1460, -1469, 'DDGres7', 1)
(-1495, -1284, 'DDGsrc3', 1)
(-1269, -1503, 'CDG', 1)
(-1393, -1442, 'DDGvec2', 1)
(-1189, -1574, 'DDGstride', 1)
(-1269, -1281, 'CDG', 1)
(-1495, -1276, 'DDGsrc1', 1)
(-1317, -1335, 'DDGsrc0', 1)
(-1362, -1442, 'DDGmask5', 1)
(-1269, -1305, 'CDG', 1)
(-1415, -1433, 'DDGsrc7', 1)
(-1442, -1482, 'DDGvec2', 1)
(-1232, -1380, 'DDGminus5b', 1)
(-1269, -1564, 'CDG', 1)
(-1281, -1284, 'DDGsrc', 1)
(-1380, -1424, 'DDGvec1', 1)
(-1451, -1482, 'DDGvec8', 1)
(-1517, -1529, 'DDGres6', 1)
(-1469, -1482, 'DDGres5', 1)
(-1380, -1393, 'DDGres2', 1)
(-1326, -1371, 'DDGvec9', 1)
(-1242, -1335, 'DDGmask1', 1)
(-1335, -1380, 'DDGvec4', 1)
(-1269, -1535, 'CDG', 1)
(-1269, -1380, 'CDG', 1)
(-1424, -1469, 'DDGvec4', 1)
(-1574, -1542, 'DDGdst3', 1)
(-1256, -1335, 'DDGmask4', 1)
(-1451, -1353, 'DDGmask5', 1)
(-1393, -1511, 'DDGres2', 1)
(-1442, -1451, 'DDGmask5', 1)
(-1393, -1511, 'DDGres3', 1)
(-1189, -1281, 'DDGstride', 1)
(-1529, -1542, 'DDGres4', 1)
(-1269, -1517, 'CDG', 1)
(-1269, -1523, 'CDG', 1)
(-1564, -1569, 'DDGdst3', 1)
(-1549, -1569, 'DDGdst0', 1)
(-1460, -1317, 'DDGvec3', 1)
(-1482, -1362, 'DDGvec11', 1)
(-1542, -1460, 'DDGres6', 1)
(-1371, -1380, 'DDGres1', 1)
(-1503, -1292, 'DDGsrc5', 1)
(-1433, -1469, 'DDGvec10', 1)
(-1269, -1284, 'CDG', 1)
(-1460, -1469, 'DDGres4', 1)
(-1535, -1371, 'DDGres2', 1)
(-1559, -1569, 'DDGdst2', 1)
(-1371, -1380, 'DDGres0', 1)
(-1569, -1574, 'DDGdst0', 1)
(-1469, -1380, 'DDGminus5b', 1)
(-1284, -1308, 'DDGsrc3', 1)
(-1362, -1393, 'DDGvec8', 1)
(-1380, -1393, 'DDGres0', 1)
(-1269, -1371, 'CDG', 1)
(-1460, -1326, 'DDGvec9', 1)
(-1460, -1317, 'DDGvec0', 1)
(-1415, -1317, 'DDGmask0', 1)
(-1269, -1415, 'CDG', 1)
(-1308, -1415, 'DDGsrc6', 1)
(-1353, -1393, 'DDGvec5', 1)
(-1269, -1300, 'CDG', 1)
(-1380, -1393, 'DDGres1', 1)
(-1344, -1362, 'DDGsrc2', 1)
(-1353, -1495, 'DDGsrc1', 1)
(-1242, -1256, 'DDGmask1', 1)
(-1326, -1371, 'DDGvec6', 1)
(-1469, -1482, 'DDGres4', 1)
(-1451, -1503, 'DDGsrc7', 1)
(-1482, -1517, 'DDGres4', 1)
(-1482, -1362, 'DDGvec8', 1)
(-1305, -1276, 'DDGsrc', 1)
(-1415, -1460, 'DDGvec9', 1)
(-1276, -1308, 'DDGsrc1', 1)
(-1433, -1335, 'DDGmask4', 1)
(-1581, -1574, 'DDGstride', 1)
(-1542, -1460, 'DDGres7', 1)
(-1308, -1406, 'DDGsrc5', 1)
(-1269, -1569, 'CDG', 1)
(-1284, -1308, 'DDGsrc2', 1)
(-1535, -1371, 'DDGres1', 1)
(-1269, -1406, 'CDG', 1)
(-1269, -1542, 'CDG', 1)
(-1569, -1574, 'DDGdst2', 1)
(-1269, -1554, 'CDG', 1)
(-1269, -1581, 'CDG', 1)
(-1574, -1535, 'DDGdst0', 1)
(-1535, -1549, 'DDGdst0', 1)
(-1393, -1482, 'DDGplus20b', 1)
(-1581, -1281, 'DDGstride', 1)
(-1300, -1308, 'DDGsrc7', 1)
(-1269, -1335, 'CDG', 1)
(-1511, -1523, 'DDGres1', 1)
(-1335, -1353, 'DDGsrc0', 1)
(-1344, -1362, 'DDGsrc3', 1)
(-1269, -1495, 'CDG', 1)
(-1242, -1251, 'DDGmask0', 1)
(-1269, -1511, 'CDG', 1)
(-1503, -1564, 'DDGsrc6', 1)
(-1442, -1503, 'DDGsrc4', 1)
(-1393, -1451, 'DDGvec8', 1)
(-1269, -1289, 'CDG', 1)
(-1269, -1482, 'CDG', 1)
(-1469, -1335, 'DDGvec1', 1)
(-1424, -1442, 'DDGsrc4', 1)
(-1344, -1380, 'DDGvec7', 1)
(-1482, -1353, 'DDGvec2', 1)
(-1433, -1335, 'DDGmask1', 1)
(-1269, -1424, 'CDG', 1)
(-1442, -1503, 'DDGsrc5', 1)
(-1469, -1344, 'DDGvec10', 1)
(-1308, -1326, 'DDGsrc2', 1)
(-1269, -1559, 'CDG', 1)
(-1424, -1442, 'DDGsrc5', 1)
(-1292, -1308, 'DDGsrc5', 1)
(-1451, -1503, 'DDGsrc6', 1)
(-1242, -1317, 'DDGmask0', 1)
(-1559, -1292, 'DDGsrc4', 1)
(-1549, -1276, 'DDGsrc0', 1)
(-1406, -1415, 'DDGmask3', 1)
(-1317, -1371, 'DDGvec3', 1)
(-1415, -1460, 'DDGvec6', 1)
(-1406, -1415, 'DDGmask0', 1)
(-1269, -1393, 'CDG', 1)
(-1393, -1442, 'DDGvec5', 1)
(-1335, -1344, 'DDGmask4', 1)
(-1581, -1289, 'DDGstride', 1)
(-1433, -1451, 'DDGsrc7', 1)
(-1574, -1581, 'DDGdst', 1)
(-1317, -1326, 'DDGmask3', 1)
(-1406, -1424, 'DDGsrc4', 1)
(-1554, -1569, 'DDGdst1', 1)
(-1415, -1433, 'DDGsrc6', 1)
(-1380, -1433, 'DDGvec7', 1)
(-1529, -1542, 'DDGres6', 1)
(-1574, -1542, 'DDGdst2', 1)
(-1242, -1353, 'DDGmask2', 1)
(-1517, -1529, 'DDGres5', 1)
(-1460, -1469, 'DDGres5', 1)
(-1393, -1511, 'DDGres1', 1)
(-1269, -1529, 'CDG', 1)
(-1523, -1535, 'DDGres3', 1)
(-1189, -1289, 'DDGstride', 1)
(-1189, -1305, 'DDGstride', 1)
(-1269, -1292, 'CDG', 1)
(-1308, -1406, 'DDGsrc4', 1)
(-1269, -1308, 'CDG', 1)
(-1460, -1469, 'DDGres6', 1)
(-1393, -1511, 'DDGres0', 1)
(-1469, -1482, 'DDGres7', 1)
(-1362, -1495, 'DDGsrc2', 1)
(-1326, -1344, 'DDGsrc2', 1)
(-1269, -1451, 'CDG', 1)
(-1424, -1469, 'DDGvec1', 1)
(-1269, -1297, 'CDG', 1)
(-1380, -1424, 'DDGvec4', 1)
(-1581, -1574, 'DDGdst', 1)
(-1511, -1523, 'DDGres0', 1)
(-1535, -1371, 'DDGres0', 1)
(-1581, -1297, 'DDGstride', 1)
(-1269, -1442, 'CDG', 1)
(-1469, -1482, 'DDGres6', 1)
(-1723, -1743, 'DDGsrc3', 1)
(-1629, -1666, 'DDGmask1', 1)
(-1652, -1661, 'DDGvec1', 1)
(-1599, -1638, 'DDGstride', 1)
(-1682, -1715, 'DDGsrc0', 1)
(-1652, -1666, 'DDGsrc1', 1)
(-1702, -1706, 'DDGres0', 1)
(-1702, -1706, 'DDGres1', 1)
(-1666, -1682, 'DDGsrc0', 1)
(-1652, -1666, 'DDGsrc2', 1)
(-1619, -1675, 'DDGminus5b', 1)
(-1698, -1702, 'DDGres1', 1)
(-1682, -1723, 'DDGsrc2', 1)
(-1638, -1647, 'DDGsrc2', 1)
(-1731, -1755, 'DDGsrc0', 1)
(-1625, -1691, 'DDGplus20b', 1)
(-1666, -1675, 'DDGvec2', 1)
(-1698, -1702, 'DDGres0', 1)
(-1647, -1652, 'DDGsrc3', 1)
(-1629, -1682, 'DDGmask2', 1)
(-1666, -1675, 'DDGvec3', 1)
(-1647, -1652, 'DDGsrc0', 1)
(-1666, -1682, 'DDGsrc2', 1)
(-1767, -1772, 'DDGres', 1)
(-1661, -1675, 'DDGres0', 1)
(-1661, -1675, 'DDGres1', 1)
(-1682, -1715, 'DDGsrc1', 1)
(-1755, -1767, 'DDGsrc0', 1)
(-1638, -1647, 'DDGsrc3', 1)
(-1652, -1661, 'DDGvec0', 1)
(-1723, -1743, 'DDGsrc2', 1)
(-1715, -1731, 'DDGsrc0', 1)
(-1638, -1647, 'DDGsrc0', 1)
(-1675, -1691, 'DDGres1', 1)
(-1743, -1755, 'DDGsrc1', 1)
(-1682, -1691, 'DDGvec5', 1)
(-1691, -1698, 'DDGres1', 1)
(-1706, -1767, 'DDGres', 1)
(-1666, -1682, 'DDGsrc1', 1)
(-1638, -1781, 'DDGstride', 1)
(-1652, -1666, 'DDGsrc3', 1)
(-1682, -1691, 'DDGvec4', 1)
(-1647, -1652, 'DDGsrc1', 1)
(-1682, -1723, 'DDGsrc3', 1)
(-1652, -1666, 'DDGsrc0', 1)
(-1647, -1652, 'DDGsrc2', 1)
(-1691, -1698, 'DDGres0', 1)
(-1715, -1731, 'DDGsrc1', 1)
(-1638, -1647, 'DDGsrc1', 1)
(-1629, -1652, 'DDGmask0', 1)
(-1772, -1781, 'DDGres', 1)
(-1675, -1691, 'DDGres0', 1)
(-1666, -1682, 'DDGsrc3', 1)
(-1842, -1851, 'DDGsrc3', 1)
(-1870, -1879, 'DDGvec2', 1)
(-1879, -1895, 'DDGres1', 1)
(-1842, -1851, 'DDGsrc0', 1)
(-1870, -1879, 'DDGvec3', 1)
(-1856, -1865, 'DDGvec1', 1)
(-1879, -1895, 'DDGres0', 1)
(-1927, -1947, 'DDGsrc2', 1)
(-1842, -1985, 'DDGstride', 1)
(-1886, -1919, 'DDGsrc0', 1)
(-1919, -1935, 'DDGsrc0', 1)
(-1803, -1842, 'DDGstride', 1)
(-1856, -1870, 'DDGsrc3', 1)
(-1833, -1870, 'DDGmask1', 1)
(-1870, -1886, 'DDGsrc2', 1)
(-1823, -1879, 'DDGminus5b', 1)
(-1947, -1959, 'DDGsrc1', 1)
(-1886, -1927, 'DDGsrc3', 1)
(-1971, -1976, 'DDGres', 1)
(-1856, -1870, 'DDGsrc0', 1)
(-1906, -1910, 'DDGres1', 1)
(-1906, -1910, 'DDGres0', 1)
(-1870, -1886, 'DDGsrc1', 1)
(-1935, -1959, 'DDGsrc0', 1)
(-1829, -1895, 'DDGplus20b', 1)
(-1851, -1856, 'DDGsrc3', 1)
(-1833, -1886, 'DDGmask2', 1)
(-1851, -1856, 'DDGsrc0', 1)
(-1842, -1851, 'DDGsrc2', 1)
(-1865, -1879, 'DDGres1', 1)
(-1927, -1947, 'DDGsrc3', 1)
(-1842, -1851, 'DDGsrc1', 1)
(-1856, -1865, 'DDGvec0', 1)
(-1976, -1985, 'DDGres', 1)
(-1959, -1971, 'DDGsrc0', 1)
(-1919, -1935, 'DDGsrc1', 1)
(-1886, -1919, 'DDGsrc1', 1)
(-1856, -1870, 'DDGsrc1', 1)
(-1870, -1886, 'DDGsrc3', 1)
(-1865, -1879, 'DDGres0', 1)
(-1895, -1902, 'DDGres1', 1)
(-1910, -1971, 'DDGres', 1)
(-1902, -1906, 'DDGres1', 1)
(-1886, -1927, 'DDGsrc2', 1)
(-1856, -1870, 'DDGsrc2', 1)
(-1886, -1895, 'DDGvec4', 1)
(-1895, -1902, 'DDGres0', 1)
(-1886, -1895, 'DDGvec5', 1)
(-1851, -1856, 'DDGsrc2', 1)
(-1870, -1886, 'DDGsrc0', 1)
(-1902, -1906, 'DDGres0', 1)
(-1851, -1856, 'DDGsrc1', 1)
(-1833, -1856, 'DDGmask0', 1)
===========================
(-276, 1, '-', 0, '+3178', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res4, res5, res6, res7)')
(-327, 1, '-', 0, '+3185', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-142, 1, '-', 0, '+3162', 'VSHF_B2_SB(src2, src2, src2, src3, mask0, mask3, vec6, vec9)')
(-169, 1, '-', 0, '+3165', 'VSHF_B2_SB(src0, src0, src0, src1, mask2, mask5, vec2, vec5)')
(-178, 1, '-', 0, '+3166', 'VSHF_B2_SB(src2, src2, src2, src3, mask2, mask5, vec8, vec11)')
(-385, 1, '-', 0, '+3195', 'XORI_B4_128_SB(dst0, dst1, dst2, dst3)')
(-249, 1, '-', 0, '+3175', 'VSHF_B2_SB(src6, src6, src6, src7, mask1, mask4, vec7, vec10)')
(-54, 1, '-', 0, '+3142', 'plus20b = __msa_ldi_b(20)')
(-351, 1, '-', 0, '+3189', 'PCKEV_B2_SB(res1, res0, res3, res2, dst0, dst1)')
(-82, 1, '-', 0, '+3148', 'src -= 2')
(-105, 1, '-', 0, '+3154', 'src += stride')
(-133, 1, '-', 0, '+3161', 'VSHF_B2_SB(src0, src0, src0, src1, mask0, mask3, vec0, vec3)')
(-358, 1, '-', 0, '+3190', 'PCKEV_B2_SB(res5, res4, res7, res6, dst2, dst3)')
(-267, 1, '-', 0, '+3177', 'VSHF_B2_SB(src6, src6, src6, src7, mask2, mask5, vec8, vec11)')
(-48, 1, '-', 0, '+3141', 'minus5b = __msa_ldi_b(-5)')
(-92, 1, '-', 0, '+3151', 'LD_SB2(src, 16, src0, src1)')
(-58, 1, '-', 0, '+3144', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-222, 1, '-', 0, '+3172', 'VSHF_B2_SB(src4, src4, src4, src5, mask0, mask3, vec0, vec3)')
(-121, 1, '-', 0, '+3158', 'src += stride')
(-196, 1, '-', 0, '+3168', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res0, res1, res2, res3)')
(-108, 1, '-', 0, '+3155', 'LD_SB2(src, 16, src4, src5)')
(-116, 1, '-', 0, '+3157', 'LD_SB2(src, 16, src6, src7)')
(-100, 1, '-', 0, '+3153', 'LD_SB2(src, 16, src2, src3)')
(-151, 1, '-', 0, '+3163', 'VSHF_B2_SB(src0, src0, src0, src1, mask1, mask4, vec1, vec4)')
(-124, 1, '-', 0, '+3160', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-5, 0, 'D', 2, '3134', 'ptrdiff_t stride')
(-67, 1, '-', 0, '+3145', 'mask3 = mask0 + 8')
(-319, 1, '-', 0, '+3184', 'SLDI_B2_SB(src5, src7, src4, src6, src4, src6, 3)')
(-258, 1, '-', 0, '+3176', 'VSHF_B2_SB(src4, src4, src4, src5, mask2, mask5, vec2, vec5)')
(-85, 1, '-', 0, '+3150', 'for (loop_cnt = 4; loop_cnt--;)')
(-345, 1, '-', 0, '+3188', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-209, 1, '-', 0, '+3170', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res0, res1, res2, res3)')
(-311, 1, '-', 0, '+3183', 'SLDI_B2_SB(src1, src3, src0, src2, src0, src2, 3)')
(-298, 1, '-', 0, '+3181', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res4, res5, res6, res7)')
(-370, 1, '-', 0, '+3192', 'dst1 = __msa_aver_s_b(dst1, src2)')
(-333, 1, '-', 0, '+3186', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-365, 1, '-', 0, '+3191', 'dst0 = __msa_aver_s_b(dst0, src0)')
(-240, 1, '-', 0, '+3174', 'VSHF_B2_SB(src4, src4, src4, src5, mask1, mask4, vec1, vec4)')
(-375, 1, '-', 0, '+3193', 'dst2 = __msa_aver_s_b(dst2, src4)')
(-285, 1, '-', 0, '+3179', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res4, res5, res6, res7)')
(-390, 1, '-', 0, '+3196', 'ST_SB4(dst0, dst1, dst2, dst3, dst, stride)')
(-77, 1, '-', 0, '+3147', 'mask5 = mask2 + 8')
(-397, 1, '-', 0, '+3197', 'dst += (4 * stride)')
(-160, 1, '-', 0, '+3164', 'VSHF_B2_SB(src2, src2, src2, src3, mask1, mask4, vec7, vec10)')
(-187, 1, '-', 0, '+3167', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res0, res1, res2, res3)')
(-231, 1, '-', 0, '+3173', 'VSHF_B2_SB(src6, src6, src6, src7, mask0, mask3, vec6, vec9)')
(-339, 1, '-', 0, '+3187', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-113, 1, '-', 0, '+3156', 'src += stride')
(-97, 1, '-', 0, '+3152', 'src += stride')
(-380, 1, '-', 0, '+3194', 'dst3 = __msa_aver_s_b(dst3, src6)')
(-72, 1, '-', 0, '+3146', 'mask4 = mask1 + 8')
(-697, 1, '-', 0, '+3239', 'SLDI_B2_SB(src6, src7, src6, src7, src6, src7, 2)')
(-540, 1, '-', 0, '+3219', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res0, res1, res2, res3)')
(-584, 1, '-', 0, '+3225', 'VSHF_B2_SB(src4, src4, src5, src5, mask0, mask0, vec0, vec1)')
(-681, 1, '-', 0, '+3237', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 2)')
(-750, 1, '-', 0, '+3247', 'PCKEV_B2_SB(res5, res4, res7, res6, tmp2, tmp3)')
(-777, 1, '-', 0, '+3252', 'XORI_B4_128_SB(tmp0, tmp1, tmp2, tmp3)')
(-415, 0, 'D', 2, '3202', 'ptrdiff_t stride')
(-705, 1, '-', 0, '+3240', 'PCKEV_D2_SB(src1, src0, src3, src2, src0, src1)')
(-464, 1, '-', 0, '+3211', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-651, 1, '-', 0, '+3233', 'VSHF_B2_SB(src6, src6, src7, src7, mask2, mask2, vec10, vec11)')
(-660, 1, '-', 0, '+3234', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res4, res5, res6, res7)')
(-731, 1, '-', 0, '+3244', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-495, 1, '-', 0, '+3214', 'VSHF_B2_SB(src0, src0, src1, src1, mask0, mask0, vec0, vec1)')
(-757, 1, '-', 0, '+3248', 'tmp0 = __msa_aver_s_b(tmp0, src0)')
(-611, 1, '-', 0, '+3228', 'VSHF_B2_SB(src4, src4, src5, src5, mask1, mask1, vec4, vec5)')
(-531, 1, '-', 0, '+3218', 'VSHF_B2_SB(src2, src2, src3, src3, mask1, mask1, vec6, vec7)')
(-593, 1, '-', 0, '+3226', 'VSHF_B2_SB(src6, src6, src7, src7, mask0, mask0, vec2, vec3)')
(-486, 1, '-', 0, '+3213', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-689, 1, '-', 0, '+3238', 'SLDI_B2_SB(src4, src5, src4, src5, src4, src5, 2)')
(-454, 1, '-', 0, '+3208', 'minus5b = __msa_ldi_b(-5)')
(-562, 1, '-', 0, '+3222', 'VSHF_B2_SB(src2, src2, src3, src3, mask2, mask2, vec10, vec11)')
(-737, 1, '-', 0, '+3245', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-782, 1, '-', 0, '+3253', 'ST8x8_UB(tmp0, tmp1, tmp2, tmp3, dst, stride)')
(-504, 1, '-', 0, '+3215', 'VSHF_B2_SB(src2, src2, src3, src3, mask0, mask0, vec2, vec3)')
(-460, 1, '-', 0, '+3209', 'plus20b = __msa_ldi_b(20)')
(-602, 1, '-', 0, '+3227', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res4, res5, res6, res7)')
(-629, 1, '-', 0, '+3230', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res4, res5, res6, res7)')
(-743, 1, '-', 0, '+3246', 'PCKEV_B2_SB(res1, res0, res3, res2, tmp0, tmp1)')
(-762, 1, '-', 0, '+3249', 'tmp1 = __msa_aver_s_b(tmp1, src1)')
(-712, 1, '-', 0, '+3241', 'PCKEV_D2_SB(src5, src4, src7, src6, src4, src5)')
(-522, 1, '-', 0, '+3217', 'VSHF_B2_SB(src0, src0, src1, src1, mask1, mask1, vec4, vec5)')
(-473, 1, '-', 0, '+3212', 'LD_SB8(src - 2, stride, src0, src1, src2, src3, src4, src5, src6, src7)')
(-719, 1, '-', 0, '+3242', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-725, 1, '-', 0, '+3243', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-553, 1, '-', 0, '+3221', 'VSHF_B2_SB(src0, src0, src1, src1, mask2, mask2, vec8, vec9)')
(-767, 1, '-', 0, '+3250', 'tmp2 = __msa_aver_s_b(tmp2, src4)')
(-673, 1, '-', 0, '+3236', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 2)')
(-772, 1, '-', 0, '+3251', 'tmp3 = __msa_aver_s_b(tmp3, src5)')
(-620, 1, '-', 0, '+3229', 'VSHF_B2_SB(src6, src6, src7, src7, mask1, mask1, vec6, vec7)')
(-513, 1, '-', 0, '+3216', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res0, res1, res2, res3)')
(-642, 1, '-', 0, '+3232', 'VSHF_B2_SB(src4, src4, src5, src5, mask2, mask2, vec8, vec9)')
(-571, 1, '-', 0, '+3223', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res0, res1, res2, res3)')
(-940, 1, '-', 0, '+3276', 'VSHF_B2_SB(src0, src0, src1, src1, mask2, mask2, vec8, vec9)')
(-1118, 1, '-', 0, '+3299', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-1130, 1, '-', 0, '+3301', 'PCKEV_B2_SB(res1, res0, res3, res2, tmp0, tmp1)')
(-802, 0, 'D', 2, '3257', 'ptrdiff_t stride')
(-989, 1, '-', 0, '+3282', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res4, res5, res6, res7)')
(-1164, 1, '-', 0, '+3307', 'XORI_B4_128_SB(tmp0, tmp1, tmp2, tmp3)')
(-1159, 1, '-', 0, '+3306', 'tmp3 = __msa_aver_s_b(tmp3, src5)')
(-1038, 1, '-', 0, '+3288', 'VSHF_B2_SB(src6, src6, src7, src7, mask2, mask2, vec10, vec11)')
(-851, 1, '-', 0, '+3266', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-949, 1, '-', 0, '+3277', 'VSHF_B2_SB(src2, src2, src3, src3, mask2, mask2, vec10, vec11)')
(-1154, 1, '-', 0, '+3305', 'tmp2 = __msa_aver_s_b(tmp2, src4)')
(-900, 1, '-', 0, '+3271', 'HADD_SB4_SH(vec0, vec1, vec2, vec3, res0, res1, res2, res3)')
(-1106, 1, '-', 0, '+3297', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-909, 1, '-', 0, '+3272', 'VSHF_B2_SB(src0, src0, src1, src1, mask1, mask1, vec4, vec5)')
(-980, 1, '-', 0, '+3281', 'VSHF_B2_SB(src6, src6, src7, src7, mask0, mask0, vec2, vec3)')
(-1047, 1, '-', 0, '+3289', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res4, res5, res6, res7)')
(-1029, 1, '-', 0, '+3287', 'VSHF_B2_SB(src4, src4, src5, src5, mask2, mask2, vec8, vec9)')
(-1124, 1, '-', 0, '+3300', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-873, 1, '-', 0, '+3268', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-1016, 1, '-', 0, '+3285', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res4, res5, res6, res7)')
(-841, 1, '-', 0, '+3263', 'minus5b = __msa_ldi_b(-5)')
(-882, 1, '-', 0, '+3269', 'VSHF_B2_SB(src0, src0, src1, src1, mask0, mask0, vec0, vec1)')
(-1112, 1, '-', 0, '+3298', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-1144, 1, '-', 0, '+3303', 'tmp0 = __msa_aver_s_b(tmp0, src0)')
(-998, 1, '-', 0, '+3283', 'VSHF_B2_SB(src4, src4, src5, src5, mask1, mask1, vec4, vec5)')
(-1092, 1, '-', 0, '+3295', 'PCKEV_D2_SB(src1, src0, src3, src2, src0, src1)')
(-918, 1, '-', 0, '+3273', 'VSHF_B2_SB(src2, src2, src3, src3, mask1, mask1, vec6, vec7)')
(-1068, 1, '-', 0, '+3292', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 3)')
(-958, 1, '-', 0, '+3278', 'DPADD_SB4_SH(vec8, vec9, vec10, vec11, plus20b, plus20b, plus20b, plus20b,\\n                 res0, res1, res2, res3)')
(-971, 1, '-', 0, '+3280', 'VSHF_B2_SB(src4, src4, src5, src5, mask0, mask0, vec0, vec1)')
(-1149, 1, '-', 0, '+3304', 'tmp1 = __msa_aver_s_b(tmp1, src1)')
(-860, 1, '-', 0, '+3267', 'LD_SB8(src - 2, stride, src0, src1, src2, src3, src4, src5, src6, src7)')
(-1137, 1, '-', 0, '+3302', 'PCKEV_B2_SB(res5, res4, res7, res6, tmp2, tmp3)')
(-847, 1, '-', 0, '+3264', 'plus20b = __msa_ldi_b(20)')
(-1169, 1, '-', 0, '+3308', 'ST8x8_UB(tmp0, tmp1, tmp2, tmp3, dst, stride)')
(-927, 1, '-', 0, '+3274', 'DPADD_SB4_SH(vec4, vec5, vec6, vec7, minus5b, minus5b, minus5b, minus5b,\\n                 res0, res1, res2, res3)')
(-1007, 1, '-', 0, '+3284', 'VSHF_B2_SB(src6, src6, src7, src7, mask1, mask1, vec6, vec7)')
(-891, 1, '-', 0, '+3270', 'VSHF_B2_SB(src2, src2, src3, src3, mask0, mask0, vec2, vec3)')
(-1084, 1, '-', 0, '+3294', 'SLDI_B2_SB(src6, src7, src6, src7, src6, src7, 3)')
(-1076, 1, '-', 0, '+3293', 'SLDI_B2_SB(src4, src5, src4, src5, src4, src5, 3)')
(-1060, 1, '-', 0, '+3291', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 3)')
(-1099, 1, '-', 0, '+3296', 'PCKEV_D2_SB(src5, src4, src7, src6, src4, src5)')
(-1256, 1, '-', 0, '+3078', 'mask4 = mask1 + 8')
(-1503, 1, '-', 0, '+3116', 'SLDI_B2_SB(src5, src7, src4, src6, src4, src6, 2)')
(-1569, 1, '-', 0, '+3127', 'XORI_B4_128_SB(dst0, dst1, dst2, dst3)')
(-1511, 1, '-', 0, '+3117', 'SRARI_H4_SH(res0, res1, res2, res3, 5)')
(-1371, 1, '-', 0, '+3099', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res0, res1, res2, res3)')
(-1549, 1, '-', 0, '+3123', 'dst0 = __msa_aver_s_b(dst0, src0)')
(-1276, 1, '-', 0, '+3083', 'LD_SB2(src, 16, src0, src1)')
(-1189, 0, 'D', 2, '3066', 'ptrdiff_t stride')
(-1292, 1, '-', 0, '+3087', 'LD_SB2(src, 16, src4, src5)')
(-1308, 1, '-', 0, '+3092', 'XORI_B8_128_SB(src0, src1, src2, src3, src4, src5, src6, src7)')
(-1451, 1, '-', 0, '+3109', 'VSHF_B2_SB(src6, src6, src6, src7, mask2, mask5, vec8, vec11)')
(-1305, 1, '-', 0, '+3090', 'src += stride')
(-1242, 1, '-', 0, '+3076', 'LD_SB3(&luma_mask_arr[0], 16, mask0, mask1, mask2)')
(-1554, 1, '-', 0, '+3124', 'dst1 = __msa_aver_s_b(dst1, src2)')
(-1469, 1, '-', 0, '+3111', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res4, res5, res6, res7)')
(-1326, 1, '-', 0, '+3094', 'VSHF_B2_SB(src2, src2, src2, src3, mask0, mask3, vec6, vec9)')
(-1535, 1, '-', 0, '+3121', 'PCKEV_B2_SB(res1, res0, res3, res2, dst0, dst1)')
(-1266, 1, '-', 0, '+3080', 'src -= 2')
(-1251, 1, '-', 0, '+3077', 'mask3 = mask0 + 8')
(-1261, 1, '-', 0, '+3079', 'mask5 = mask2 + 8')
(-1406, 1, '-', 0, '+3104', 'VSHF_B2_SB(src4, src4, src4, src5, mask0, mask3, vec0, vec3)')
(-1353, 1, '-', 0, '+3097', 'VSHF_B2_SB(src0, src0, src0, src1, mask2, mask5, vec2, vec5)')
(-1238, 1, '-', 0, '+3074', 'plus20b = __msa_ldi_b(20)')
(-1362, 1, '-', 0, '+3098', 'VSHF_B2_SB(src2, src2, src2, src3, mask2, mask5, vec8, vec11)')
(-1289, 1, '-', 0, '+3086', 'src += stride')
(-1433, 1, '-', 0, '+3107', 'VSHF_B2_SB(src6, src6, src6, src7, mask1, mask4, vec7, vec10)')
(-1581, 1, '-', 0, '+3129', 'dst += (4 * stride)')
(-1424, 1, '-', 0, '+3106', 'VSHF_B2_SB(src4, src4, src4, src5, mask1, mask4, vec1, vec4)')
(-1232, 1, '-', 0, '+3073', 'minus5b = __msa_ldi_b(-5)')
(-1482, 1, '-', 0, '+3113', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res4, res5, res6, res7)')
(-1269, 1, '-', 0, '+3082', 'for (loop_cnt = 4; loop_cnt--;)')
(-1523, 1, '-', 0, '+3119', 'SAT_SH4_SH(res0, res1, res2, res3, 7)')
(-1335, 1, '-', 0, '+3095', 'VSHF_B2_SB(src0, src0, src0, src1, mask1, mask4, vec1, vec4)')
(-1564, 1, '-', 0, '+3126', 'dst3 = __msa_aver_s_b(dst3, src6)')
(-1542, 1, '-', 0, '+3122', 'PCKEV_B2_SB(res5, res4, res7, res6, dst2, dst3)')
(-1284, 1, '-', 0, '+3085', 'LD_SB2(src, 16, src2, src3)')
(-1380, 1, '-', 0, '+3100', 'DPADD_SB4_SH(vec1, vec4, vec7, vec10, minus5b, minus5b, minus5b,\\n                     minus5b, res0, res1, res2, res3)')
(-1559, 1, '-', 0, '+3125', 'dst2 = __msa_aver_s_b(dst2, src4)')
(-1415, 1, '-', 0, '+3105', 'VSHF_B2_SB(src6, src6, src6, src7, mask0, mask3, vec6, vec9)')
(-1300, 1, '-', 0, '+3089', 'LD_SB2(src, 16, src6, src7)')
(-1344, 1, '-', 0, '+3096', 'VSHF_B2_SB(src2, src2, src2, src3, mask1, mask4, vec7, vec10)')
(-1393, 1, '-', 0, '+3102', 'DPADD_SB4_SH(vec2, vec5, vec8, vec11, plus20b, plus20b, plus20b,\\n                     plus20b, res0, res1, res2, res3)')
(-1297, 1, '-', 0, '+3088', 'src += stride')
(-1317, 1, '-', 0, '+3093', 'VSHF_B2_SB(src0, src0, src0, src1, mask0, mask3, vec0, vec3)')
(-1442, 1, '-', 0, '+3108', 'VSHF_B2_SB(src4, src4, src4, src5, mask2, mask5, vec2, vec5)')
(-1495, 1, '-', 0, '+3115', 'SLDI_B2_SB(src1, src3, src0, src2, src0, src2, 2)')
(-1517, 1, '-', 0, '+3118', 'SRARI_H4_SH(res4, res5, res6, res7, 5)')
(-1574, 1, '-', 0, '+3128', 'ST_SB4(dst0, dst1, dst2, dst3, dst, stride)')
(-1529, 1, '-', 0, '+3120', 'SAT_SH4_SH(res4, res5, res6, res7, 7)')
(-1460, 1, '-', 0, '+3110', 'HADD_SB4_SH(vec0, vec3, vec6, vec9, res4, res5, res6, res7)')
(-1281, 1, '-', 0, '+3084', 'src += stride')
(-1743, 1, '-', 0, '+3366', 'src1 = (v16i8) __msa_insve_w((v4i32) src2, 1, (v4i32) src3)')
(-1767, 1, '-', 0, '+3368', 'res = __msa_aver_s_b(res, src0)')
(-1619, 1, '-', 0, '+3348', 'minus5b = __msa_ldi_b(-5)')
(-1706, 1, '-', 0, '+3362', 'res = __msa_pckev_b((v16i8) res1, (v16i8) res0)')
(-1731, 1, '-', 0, '+3365', 'src0 = (v16i8) __msa_insve_w((v4i32) src0, 1, (v4i32) src1)')
(-1599, 0, 'D', 2, '3343', 'ptrdiff_t stride')
(-1661, 1, '-', 0, '+3355', 'HADD_SB2_SH(vec0, vec1, res0, res1)')
(-1629, 1, '-', 0, '+3351', 'LD_SB3(&luma_mask_arr[48], 16, mask0, mask1, mask2)')
(-1691, 1, '-', 0, '+3359', 'DPADD_SB2_SH(vec4, vec5, plus20b, plus20b, res0, res1)')
(-1666, 1, '-', 0, '+3356', 'VSHF_B2_SB(src0, src1, src2, src3, mask1, mask1, vec2, vec3)')
(-1772, 1, '-', 0, '+3369', 'res = (v16i8) __msa_xori_b((v16u8) res, 128)')
(-1647, 1, '-', 0, '+3353', 'XORI_B4_128_SB(src0, src1, src2, src3)')
(-1638, 1, '-', 0, '+3352', 'LD_SB4(src - 2, stride, src0, src1, src2, src3)')
(-1675, 1, '-', 0, '+3357', 'DPADD_SB2_SH(vec2, vec3, minus5b, minus5b, res0, res1)')
(-1715, 1, '-', 0, '+3363', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 3)')
(-1625, 1, '-', 0, '+3349', 'plus20b = __msa_ldi_b(20)')
(-1702, 1, '-', 0, '+3361', 'SAT_SH2_SH(res0, res1, 7)')
(-1723, 1, '-', 0, '+3364', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 3)')
(-1781, 1, '-', 0, '+3370', 'ST4x4_UB(res, res, 0, 1, 2, 3, dst, stride)')
(-1682, 1, '-', 0, '+3358', 'VSHF_B2_SB(src0, src1, src2, src3, mask2, mask2, vec4, vec5)')
(-1652, 1, '-', 0, '+3354', 'VSHF_B2_SB(src0, src1, src2, src3, mask0, mask0, vec0, vec1)')
(-1755, 1, '-', 0, '+3367', 'src0 = (v16i8) __msa_insve_d((v2i64) src0, 1, (v2i64) src1)')
(-1698, 1, '-', 0, '+3360', 'SRARI_H2_SH(res0, res1, 5)')
(-1971, 1, '-', 0, '+3337', 'res = __msa_aver_s_b(res, src0)')
(-1829, 1, '-', 0, '+3318', 'plus20b = __msa_ldi_b(20)')
(-1906, 1, '-', 0, '+3330', 'SAT_SH2_SH(res0, res1, 7)')
(-1910, 1, '-', 0, '+3331', 'res = __msa_pckev_b((v16i8) res1, (v16i8) res0)')
(-1935, 1, '-', 0, '+3334', 'src0 = (v16i8) __msa_insve_w((v4i32) src0, 1, (v4i32) src1)')
(-1803, 0, 'D', 2, '3312', 'ptrdiff_t stride')
(-1842, 1, '-', 0, '+3321', 'LD_SB4(src - 2, stride, src0, src1, src2, src3)')
(-1985, 1, '-', 0, '+3339', 'ST4x4_UB(res, res, 0, 1, 2, 3, dst, stride)')
(-1823, 1, '-', 0, '+3317', 'minus5b = __msa_ldi_b(-5)')
(-1902, 1, '-', 0, '+3329', 'SRARI_H2_SH(res0, res1, 5)')
(-1851, 1, '-', 0, '+3322', 'XORI_B4_128_SB(src0, src1, src2, src3)')
(-1919, 1, '-', 0, '+3332', 'SLDI_B2_SB(src0, src1, src0, src1, src0, src1, 2)')
(-1833, 1, '-', 0, '+3320', 'LD_SB3(&luma_mask_arr[48], 16, mask0, mask1, mask2)')
(-1947, 1, '-', 0, '+3335', 'src1 = (v16i8) __msa_insve_w((v4i32) src2, 1, (v4i32) src3)')
(-1895, 1, '-', 0, '+3328', 'DPADD_SB2_SH(vec4, vec5, plus20b, plus20b, res0, res1)')
(-1976, 1, '-', 0, '+3338', 'res = (v16i8) __msa_xori_b((v16u8) res, 128)')
(-1927, 1, '-', 0, '+3333', 'SLDI_B2_SB(src2, src3, src2, src3, src2, src3, 2)')
(-1886, 1, '-', 0, '+3327', 'VSHF_B2_SB(src0, src1, src2, src3, mask2, mask2, vec4, vec5)')
(-1856, 1, '-', 0, '+3323', 'VSHF_B2_SB(src0, src1, src2, src3, mask0, mask0, vec0, vec1)')
(-1865, 1, '-', 0, '+3324', 'HADD_SB2_SH(vec0, vec1, res0, res1)')
(-1959, 1, '-', 0, '+3336', 'src0 = (v16i8) __msa_insve_d((v2i64) src0, 1, (v2i64) src1)')
(-1870, 1, '-', 0, '+3325', 'VSHF_B2_SB(src0, src1, src2, src3, mask1, mask1, vec2, vec3)')
(-1879, 1, '-', 0, '+3326', 'DPADD_SB2_SH(vec2, vec3, minus5b, minus5b, res0, res1)')
